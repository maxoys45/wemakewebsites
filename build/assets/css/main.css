@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,600,700");
@import url("https://fonts.googleapis.com/css?family=Abril+Fatface");
@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon/icomoon.eot?1pqizd");
  src: url("../fonts/icomoon/icomoon.eot?1pqizd#iefix") format("embedded-opentype"), url("../fonts/icomoon/icomoon.ttf?1pqizd") format("truetype"), url("../fonts/icomoon/icomoon.woff?1pqizd") format("woff"), url("../fonts/icomoon/icomoon.svg?1pqizd#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon-down-arrow, .languageSelector:after {
  content: "\e900"; }

.icon-arrow-left, .tns-controls [data-controls="prev"]:after {
  content: "\e901"; }

.icon-arrow-right, .tns-controls [data-controls="next"]:after {
  content: "\e902"; }

.icon-bag, .headerIcons__btn.icon-bag:after {
  content: "\e903"; }

.icon-cancel {
  content: "\e904"; }

.icon-heart, .headerIcons__btn.icon-heart:after {
  content: "\e905"; }

.icon-payment {
  content: "\e906"; }

.icon-profile, .headerIcons__btn.icon-profile:after {
  content: "\e907"; }

.icon-search, .headerIcons__btn.icon-search:after {
  content: "\e908"; }

.icon-burger, .mobileBurger:after {
  content: "\e909"; }

/* @keyframes duration | timing-function | delay |
   iteration-count | direction | fill-mode | play-state | name

EG: animation: 3s ease-in 1s 2 reverse both paused slidein; */
/* WRAP */
/* ELLIP */
/* TRANSITIONS */
/* BREAK POINTS */
/* -- min-width by default
   -- if 2nd parameter is 'max-width', max-width used instead
   -- if $until is added, $point becomes min-width and $until is max-width */
/* LIST MARGINS */
/* CALC */
/* FLEXBOX */
/* ------------------------------------------------------
 * FLEXBOX MIXIN
 * ------------------------------------------------------
 * @desc  Let's you create flexbox container and item css with 2 mixins

 * @usage
 *
 *    @include flexbox-container(
 *
 *        $display : flex,        [flex / inline]
 *        $direction : row,       [row / row-reverse / column / column-reverse]
 *        $wrap : nowrap,         [nowrap / wrap / wrap-reverse]
 *        $justify : start,       [start / end / center / between / around]
 *        $alignContent : start,  [start / end / center / between / around / stretch]
 *        $alignItems : center     [start / end / center / baseline / stretch]
 *
 *    );
 *
 *
 *    @include flexbox-item(
 *
 *        $order : null,          [integer] -- custom order of items
 *        $grow : 0,              [0 / 1]
 *        $shrink : 1,            [0 / 1]
 *        $basis : auto,          [auto / <length>]
 *        $alignSelf : auto       [auto / start / end / center / baseline / stretch]
 *
 *    );
 *
 * @author maxoys45
 * @version 0.1
 * ------------------------------------------------------ */
/* ASPECT RATIO */
/* HARDWARE ACCEL */
/* CENTRED CONTENT */
/* TARGET IE10+ */
/* BG IMAGE SVG WITH PNG FALLBACK */
/* ANIMATED PNG */
/* Mixin to replicate an animated GIF using Keyframes and a PNG Sprite image.

	$numberOfSteps 	= the number of frames to step between (no limit to number of steps)
	$animName 		= purely used as the animation name to avoid duplicate animations
	$imageSize 		= the width or height of the PNG image which needs to be shown in each frame
	$duration 		= the total time for the animation in seconds
	$playCount		= the way the animation is played (linear, infinite, inout)

	** requires auto-prefixer to support all modern browsers
	** Requires 'compass/css3' */
/* example use */
.animatedImage {
  animation: YES_WE_CAN 1s 2 forwards;
  /* places the keyframes animation outside of the selector */
  background-image: url("http://www.maxhenchman.co.uk/random/123test.png");
  background-repeat: no-repeat;
  background-color: #FF0000;
  display: block;
  width: 100px;
  height: 100px;
  overflow: hidden;
  margin: 20px auto; }

@keyframes YES_WE_CAN {
  0% {
    background-position: 0 0; }
  20% {
    background-position: -0px 0; }
  20.0001% {
    background-position: -100px 0; }
  40% {
    background-position: -100px 0; }
  40.0001% {
    background-position: -200px 0; }
  60% {
    background-position: -200px 0; }
  60.0001% {
    background-position: -300px 0; }
  80% {
    background-position: -300px 0; }
  80.0001% {
    background-position: -400px 0; }
  100% {
    background-position: -400px 0; } }

/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box; }

html {
  line-height: 1;
  font-size: 10px; }

body {
  font-family: "Open Sans", sans-serif; }

input, button, select, textarea, optgroup, option {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  color: inherit; }

h1, h2, h3, h4 {
  line-height: 1.3; }

h1 {
  font-size: 4.8em;
  margin-bottom: .8em; }

h2 {
  font-size: 4.2em;
  margin-bottom: .4em; }
  @media screen and (min-width: 480px) {
    h2 {
      font-size: 5em; } }

h3 {
  font-size: 2.1em;
  margin-bottom: .5em; }

h4 {
  font-size: 1.4em;
  margin-bottom: .5em; }

a, button, input, textarea {
  outline: none; }

p {
  line-height: 1.3;
  font-size: 1.4rem;
  margin-bottom: 1em; }
  p:last-of-type {
    margin-bottom: 0; }
  p a {
    font-weight: 400; }
  @media screen and (min-width: 480px) {
    p {
      font-size: 1.6rem; } }

.anchor, p a {
  font-size: 1.6rem;
  line-height: 1.3;
  outline: none;
  text-decoration: underline; }

a {
  text-decoration: none;
  color: inherit; }

img {
  display: block;
  max-width: 100%; }

strong {
  font-weight: 700; }

.hidden {
  display: none; }

.input--default {
  display: inline-block;
  vertical-align: middle;
  cursor: default;
  border-radius: 0.2rem;
  background: #FFFFFF;
  padding: 1.5rem 1rem;
  font-size: 1.6rem;
  outline: none;
  text-align: left;
  position: relative;
  min-width: 150px;
  line-height: 1.3;
  text-decoration: none; }
  .input--default:hover {
    color: inherit; }

.stripInput, button {
  border: none;
  background: none;
  padding: 0;
  cursor: pointer; }

.hiddenInputs {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1; }

.justify {
  text-align: justify; }

.wrapped {
  max-width: 1224px;
  margin-left: auto;
  margin-right: auto; }

iframe {
  width: 100%; }

.tns-outer {
  padding: 0 !important; }

.tns-outer [hidden] {
  display: none !important; }

.tns-outer [aria-controls], .tns-outer [data-action] {
  cursor: pointer; }

.tns-outer.ms-touch {
  overflow-x: scroll;
  overflow-y: hidden;
  -ms-overflow-style: none;
  -ms-scroll-chaining: none;
  -ms-scroll-snap-type: mandatory;
  -ms-scroll-snap-points-x: snapInterval(0%, 100%); }

.tns-slider {
  transition: all 0s; }

.tns-slider > .tns-item {
  box-sizing: border-box; }

.tns-horizontal.tns-subpixel {
  white-space: nowrap; }

.tns-horizontal.tns-subpixel > .tns-item {
  display: inline-block;
  vertical-align: top;
  white-space: normal; }

.tns-horizontal.tns-no-subpixel:after {
  content: '';
  display: table;
  clear: both; }

.tns-horizontal.tns-no-subpixel > .tns-item {
  float: left;
  margin-right: -100%; }

.tns-no-calc {
  position: relative;
  left: 0; }

.tns-gallery {
  position: relative;
  left: 0;
  min-height: 1px; }

.tns-gallery > .tns-item {
  position: absolute;
  left: -100%;
  transition: transform 0s, opacity 0s; }

.tns-gallery > .tns-moving {
  transition: all 0.25s; }

.tns-lazy-img {
  transition: opacity 0.6s;
  opacity: 0.6; }

.tns-lazy-img.loaded {
  opacity: 1; }

.tns-ah {
  transition: height 0s; }

.tns-ovh {
  overflow: hidden; }

.tns-hdx {
  overflow-x: hidden; }

.tns-hdy {
  overflow-y: hidden; }

.tns-visually-hidden {
  position: absolute;
  left: -10000em; }

.tns-transparent {
  opacity: 0;
  visibility: hidden; }

.tns-fadeIn {
  opacity: 1;
  filter: alpha(opacity=100);
  z-index: 0; }

.tns-normal, .tns-fadeOut {
  opacity: 0;
  filter: alpha(opacity=0);
  z-index: -1; }

/* ALL */
.btn {
  transition: 0.2s background-color ease-in-out;
  display: inline-block;
  vertical-align: middle;
  border: 1px solid #2d4966;
  font-size: 1.2em;
  padding: .4em 1.2em;
  text-transform: uppercase;
  background-color: transparent; }
  .btn:hover, .btn:focus, .btn:active {
    background-color: rgba(255, 255, 255, 0.5); }
  .btn-blue {
    background-color: #2d4966;
    font-size: 1.6rem;
    color: #FFFFFF;
    font-weight: 400;
    padding: 1em 2.2em;
    letter-spacing: 1px; }
    .btn-blue:hover, .btn-blue:focus, .btn-blue:active {
      background-color: #355678; }

@media screen and (max-width: 767px) {
  .mobileHide {
    display: none; } }

/* HEADER */
body {
  color: #191919;
  font-weight: 600; }
  @media screen and (max-width: 767px) {
    body.nav-open {
      overflow: hidden; } }

.allContent {
  position: relative; }
  @media screen and (max-width: 767px) {
    .allContent {
      transition: 0.3s left ease-in-out;
      left: 0; }
      .nav-open .allContent {
        left: 80%; } }

.header {
  overflow: hidden;
  position: relative; }

.topBar {
  position: relative;
  background-color: #ced9e4;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center; }
  @media screen and (min-width: 768px) {
    .topBar {
      padding: .5em 0em; } }
  @media screen and (min-width: 1024px) {
    .topBar {
      padding: .5em 6em; } }

.currencySelector {
  display: -ms-flexbox;
  display: flex;
  padding: .8em 2em; }
  .currencySelector__item {
    margin-right: 1.5em; }
    .currencySelector__item:last-of-type {
      margin-right: 0; }

.languageSelector {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  font-size: 1.2em;
  font-weight: 700;
  padding: 0 2rem; }
  .languageSelector:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    margin-left: 1em;
    font-size: 1.1em; }

.header__announcement {
  text-align: center;
  font-size: 1.2em;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 1px;
  padding: 1em 2em; }
  @media screen and (max-width: 767px) {
    .header__announcement {
      width: 100%;
      background-color: #e9f0f7; } }
  @media screen and (min-width: 768px) {
    .header__announcement {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      font-size: 1.4em; } }

.navigationContainer {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center;
  padding: 1em 2em; }
  @media screen and (min-width: 768px) {
    .navigationContainer {
      padding: 2em 2em; } }
  @media screen and (min-width: 1024px) {
    .navigationContainer {
      padding: 2em 8em; } }

.mobileBurger {
  font-size: 0; }
  .mobileBurger:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1rem;
    font-size: 2rem; }
  @media screen and (min-width: 768px) {
    .mobileBurger {
      display: none; } }

@media screen and (max-width: 767px) {
  .mainNav {
    transition: 0.3s transform ease-in-out;
    position: fixed;
    top: 0;
    left: 0;
    transform: translateX(-100%);
    background-color: #f7f7f7;
    height: 100vh;
    width: 80%; }
    .mainNav:after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      width: 1em;
      background: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, black 100%);
      opacity: 0.05; }
    .nav-open .mainNav {
      transform: translateX(0); } }

@media screen and (min-width: 768px) {
  .mainNav {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%); } }

.mainNav__list {
  padding: 1em; }
  @media screen and (min-width: 768px) {
    .mainNav__list {
      display: -ms-flexbox;
      display: flex; } }

@media screen and (max-width: 767px) {
  .mainNav__item {
    margin-bottom: 1em; }
    .mainNav__item:last-of-type {
      margin-bottom: 0; } }

@media screen and (min-width: 768px) {
  .mainNav__item {
    margin-right: 2em; }
    .mainNav__item:last-of-type {
      margin-right: 0; } }

@media screen and (min-width: 960px) {
  .mainNav__item {
    margin-right: 4em; }
    .mainNav__item:last-of-type {
      margin-right: 0; } }

.mainNav__link {
  font-size: 1.8rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  padding: 1rem;
  display: block; }
  @media screen and (min-width: 768px) and (max-width: 959px) {
    .mainNav__link {
      font-size: 1.6rem;
      letter-spacing: 1px;
      padding: .5rem; } }

.headerIcons__list {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }

.headerIcons__item {
  margin-right: 1.5em; }
  .headerIcons__item:last-of-type {
    margin-right: 0; }

.headerIcons__btn {
  font-size: 0; }
  .headerIcons__btn:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1rem;
    font-size: 2rem; }

/* CONTENT */
/* SLIDER */
.tns-outer {
  width: 100%;
  position: relative; }

@media screen and (max-width: 767px) {
  .tns-controls {
    display: none; } }

.tns-controls [data-controls] {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  left: auto;
  transform: translateY(-50%);
  font-size: 0;
  z-index: 20;
  margin: 0 2rem; }
  .tns-controls [data-controls]:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1rem;
    font-size: 2rem;
    color: #FFFFFF;
    padding: 1em; }
  @media screen and (min-width: 1024px) {
    .tns-controls [data-controls] {
      margin: 0 4rem; } }

.tns-controls [data-controls="prev"] {
  left: 0; }

.tns-controls [data-controls="next"] {
  right: 0; }

.tns-nav {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  top: auto;
  transform: translateX(-50%);
  bottom: 0;
  z-index: 20;
  padding-bottom: 2em;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  .tns-nav [data-nav] {
    margin-right: 1em;
    transition: none !important;
    width: 1.2em;
    height: 1.2em;
    border-radius: 10em;
    background-color: rgba(255, 255, 255, 0.7); }
    .tns-nav [data-nav]:last-of-type {
      margin-right: 0; }
    .tns-nav [data-nav].tns-nav-active {
      background-color: #FFFFFF;
      width: 1.7em;
      height: 1.7em; }

.tns-item {
  width: 100%; }

.tns-slide {
  background-image: url("../img/slide1.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  color: #FFFFFF;
  text-align: center;
  letter-spacing: 1px;
  padding: 10em 2em; }
  @media screen and (min-width: 768px) {
    .tns-slide {
      padding: 15em 2em; } }

.tns-slide-title {
  font-family: "Abril Fatface", serif;
  font-weight: 400; }

.tns-slide-cta {
  margin-top: 2em; }

.tns-img {
  width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9pbmNzL19mb250cy5zY3NzIiwiX2luY3MvX21peGlucy5zY3NzIiwiX2luY3MvX3Jlc2V0LnNjc3MiLCJfaW5jcy9fZ2VuZXJpYy5zY3NzIiwiX2luY3MvX3ZhcnMuc2NzcyIsIl9pbmNzL19zbGlkZXIuc2NzcyIsIl9pbmNzL19tYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsNkVBQVk7QUFJWixxRUFBWTtBQUlaO0VBQ0ksdUJBQXNCO0VBQ3RCLGdEQUFrRDtFQUNsRCwrUUFHZ0U7RUFDaEUsb0JBQW1CO0VBQ25CLG1CQUFrQixFQUFBOztBQUd0QjtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUFDRDtFQUNDLGlCQUFnQixFQUNoQjs7QUNzQkQ7Ozs4REFHOEQ7QUFNOUQsVUFBVTtBQU1WLFdBQVc7QUFRWCxpQkFBaUI7QUFNakIsa0JBQWtCO0FBRWxCOzs2RUFFNkU7QUFxQjdFLGtCQUFrQjtBQTZCbEIsVUFBVTtBQVNWLGFBQWE7QUFFYjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0REErQjREO0FBeUs1RCxrQkFBa0I7QUFrQmxCLG9CQUFvQjtBQVNwQixxQkFBcUI7QUE2Q3JCLGtCQUFrQjtBQU9sQixvQ0FBb0M7QUFPcEMsa0JBQWtCO0FBQ2xCOzs7Ozs7Ozs7OEJBUzhCO0FBOEQ5QixpQkFBaUI7QUFDakI7RUEzREMsb0NBNEQySTtFQTFEM0ksNERBQTREO0VBMkQ1RCx5RUFBdUU7RUFDdkUsNkJBQTJCO0VBQzNCLDBCQUF3QjtFQUN4QixlQUFhO0VBQ2IsYUFBVztFQUNYLGNB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SUFDOUMsWUFBOEI7SUFDOUIsbUJBQWdDO0lBQ2hDLG9CQUFnQztJQUNoQyxxQkFBZ0M7SUFDaEMscUJBQThCO0lBQzlCLGVBQTJCO0lBQzNCLHVDQUF1QztJQUN2QyxvQ0FBcUM7SUFDckMsbUNBQW1DO0lBRWxDLGdCQUFnQjtJSytQZixnQkFBYztJQUNkLGVGalJZO0lFa1JaLGFBQVcsRUw5UGI7RUFpR0E7SUttSkE7TUFnQkUsZUFBYyxFQUVmLEVBQUE7O0FBbEJEO0VBc0JDLFFBQU0sRUFDTjs7QUF2QkQ7RUEyQkMsU0FBTyxFQUNQOztBQUdGO0VMNlBBLG1CQURnQztFQUVoQyxTQUFRO0VBQ1IsVUFBUztFQUNULDZDQUE0QztFQUczQyxVQUFTO0VBQ1QsNEJBQTJCO0VLbFEzQixVQUFRO0VBQ1IsWUFBVTtFQUNWLG9CQUFrQjtFQUNsQixxQkFBWTtFQUFaLGNBQVk7RUFDWix1QkFBa0I7TUFBbEIsb0JBQWtCLEVBaUJsQjtFQXZCQTtJTDdKQSxrQkt1S3lCO0lBQ3hCLDRCQUEwQjtJQUMxQixhQUFXO0lBQ1gsY0FBWTtJQUNaLG9CQUFrQjtJQUNsQiwyQ0Z0VGEsRUU2VGI7SUxoTEE7TUFDQyxnQkFBZ0IsRUFDaEI7SUt3SkY7TUFrQkUsMEJGelRZO01FMFRaLGFBQVc7TUFDWCxjQUFZLEVBQ1o7O0FBSUg7RUFDQyxZQUFVLEVBQ1Y7O0FBRUQ7RUFDQywyQ0FBZ0Q7RUFDaEQsNEJBQTJCO0VBQzNCLHVCQUFxQjtFQUNyQiw2QkFBNEI7RUFDNUIsZUZ6VWM7RUUwVWQsbUJBQWtCO0VBQ2xCLG9CQUFrQjtFQUNsQixrQkFBaUIsRUFLakI7RUw1TkE7SUsrTUQ7TUFXRSxrQkFBZ0IsRUFFakIsRUFBQTs7QUFFRDtFQUNDLG9DRnhVbUM7RUV5VW5DLGlCRnJVYyxFRXNVZDs7QUFLRDtFQUNDLGdCQUFlLEVBRWY7O0FBRUQ7RUFDQyxZQUFVLEVBQ1YiLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBPUEVOIFNBTlNcclxuXHJcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9T3BlbitTYW5zOjQwMCw2MDAsNzAwJyk7XHJcblxyXG4vLyBBQlJJTCBGQVRGQUNFXHJcblxyXG5AaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUFicmlsK0ZhdGZhY2UnKTtcclxuXHJcbi8vIElDT01PT05cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gICAgZm9udC1mYW1pbHk6ICdpY29tb29uJztcclxuICAgIHNyYzogICAgdXJsKCcuLi9mb250cy9pY29tb29uL2ljb21vb24uZW90PzFwcWl6ZCcpO1xyXG4gICAgc3JjOiAgICB1cmwoJy4uL2ZvbnRzL2ljb21vb24vaWNvbW9vbi5lb3Q/MXBxaXpkI2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxyXG4gICAgdXJsKCcuLi9mb250cy9pY29tb29uL2ljb21vb24udHRmPzFwcWl6ZCcpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcclxuICAgIHVybCgnLi4vZm9udHMvaWNvbW9vbi9pY29tb29uLndvZmY/MXBxaXpkJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICB1cmwoJy4uL2ZvbnRzL2ljb21vb24vaWNvbW9vbi5zdmc/MXBxaXpkI2ljb21vb24nKSBmb3JtYXQoJ3N2ZycpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuLmljb24tZG93bi1hcnJvdyB7XHJcblx0Y29udGVudDogXCJcXGU5MDBcIjtcclxufVxyXG4uaWNvbi1hcnJvdy1sZWZ0IHtcclxuXHRjb250ZW50OiBcIlxcZTkwMVwiO1xyXG59XHJcbi5pY29uLWFycm93LXJpZ2h0IHtcclxuXHRjb250ZW50OiBcIlxcZTkwMlwiO1xyXG59XHJcbi5pY29uLWJhZyB7XHJcblx0Y29udGVudDogXCJcXGU5MDNcIjtcclxufVxyXG4uaWNvbi1jYW5jZWwge1xyXG5cdGNvbnRlbnQ6IFwiXFxlOTA0XCI7XHJcbn1cclxuLmljb24taGVhcnQge1xyXG5cdGNvbnRlbnQ6IFwiXFxlOTA1XCI7XHJcbn1cclxuLmljb24tcGF5bWVudCB7XHJcblx0Y29udGVudDogXCJcXGU5MDZcIjtcclxufVxyXG4uaWNvbi1wcm9maWxlIHtcclxuXHRjb250ZW50OiBcIlxcZTkwN1wiO1xyXG59XHJcbi5pY29uLXNlYXJjaCB7XHJcblx0Y29udGVudDogXCJcXGU5MDhcIjtcclxufVxyXG4uaWNvbi1idXJnZXIge1xyXG5cdGNvbnRlbnQ6IFwiXFxlOTA5XCI7XHJcbn0iLCIvLyBJQ09NT09OXHJcbkBtaXhpbiBpY29tb29uKCRpY29uOmZhbHNlLCAkcG9zaXRpb24gOiBcImFmdGVyXCIsICRyZXBsYWNlIDogZmFsc2UpIHtcclxuXHQvLyBJZiB3ZSdyZSByZXBsYWNpbmcgdGhlIHRleHQsIHNldCBmb250LXNpemUgdG8gMFxyXG5cdEBpZiAkcmVwbGFjZSB7XHJcblx0XHRmb250LXNpemUgOiAwO1xyXG5cdH1cclxuXHQvLyBQc2V1ZG8tZWxlbWVudCBwcm9wZXJ0aWVzXHJcblx0JjojeyRwb3NpdGlvbn0ge1xyXG5cdFx0Ly9AZXh0ZW5kIC4jeyRpY29ufTtcclxuXHRcdGZvbnQtZmFtaWx5ICAgICAgICAgICAgIDogJ2ljb21vb24nICFpbXBvcnRhbnQ7XHJcblx0XHRzcGVhayAgICAgICAgICAgICAgICAgICA6IG5vbmU7XHJcblx0XHRmb250LXN0eWxlICAgICAgICAgICAgICA6IG5vcm1hbDtcclxuXHRcdGZvbnQtd2VpZ2h0ICAgICAgICAgICAgIDogbm9ybWFsO1xyXG5cdFx0Zm9udC12YXJpYW50ICAgICAgICAgICAgOiBub3JtYWw7XHJcblx0XHR0ZXh0LXRyYW5zZm9ybSAgICAgICAgICA6IG5vbmU7XHJcblx0XHRsaW5lLWhlaWdodCAgICAgICAgICAgICA6IDE7XHJcblx0XHQvKiBCZXR0ZXIgRm9udCBSZW5kZXJpbmcgPT09PT09PT09PT0gKi9cclxuXHRcdC13ZWJraXQtZm9udC1zbW9vdGhpbmcgIDogYW50aWFsaWFzZWQ7XHJcblx0XHQtbW96LW9zeC1mb250LXNtb290aGluZyA6IGdyYXlzY2FsZTtcclxuXHRcdEBpZiAkcmVwbGFjZSB7XHJcblx0XHRcdGZvbnQtc2l6ZSA6IDFyZW07XHJcblx0XHR9XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcblxyXG5cdEBpZiAoJGljb24gIT0gZmFsc2UpIHtcclxuXHRcdCY6I3skcG9zaXRpb259IHtcclxuXHRcdFx0QGV4dGVuZCAuI3skaWNvbn07XHJcblx0XHR9XHJcblx0fVxyXG5cclxufVxyXG5cclxuLy8gSlVTVCBUSEUgSUNPTU9PTiBJQ09OIC0gVVNFRCBJTiBDT05KVU5DVElPTiBXSVRIIElDT01PT04gTUlYSU5cclxuQG1peGluIGljb21vb25pY29uKCRpY29uLCAkcG9zaXRpb246XCJhZnRlclwiKSB7XHJcblx0JjojeyRwb3NpdGlvbn0ge1xyXG5cdFx0QGV4dGVuZCAuI3skaWNvbn07XHJcblx0XHRAY29udGVudDtcclxuXHR9XHJcbn1cclxuXHJcbi8vIFBBRERJTkdcclxuQG1peGluIHBhZGRlZCgkdDphdXRvLCAkcjphdXRvLCAkYjphdXRvLCAkbDphdXRvKSB7XHJcblx0cGFkZGluZy10b3A6JHQ7XHJcblx0cGFkZGluZy1yaWdodDokcjtcclxuXHRwYWRkaW5nLWJvdHRvbTokYjtcclxuXHRwYWRkaW5nLWxlZnQ6JGw7XHJcbn1cclxuXHJcbi8vIERPVUJMRSBCT1JERVJcclxuQG1peGluIGRvdWJsZWJvcmRlcigkdGhpY2tuZXNzLCAkZ2FwLCAkY29sb3IsICRiZ2NvbG9yLCAkbm9tYXJnaW4gOiBmYWxzZSkge1xyXG5cdCRnYXAgOiAkdGhpY2tuZXNzICsgJGdhcDtcclxuXHQkZG91YmxlIDogJHRoaWNrbmVzcyArICRnYXA7XHJcblx0Ym94LXNoYWRvdyA6IDAgMCAwICR0aGlja25lc3MgJGNvbG9yLFxyXG5cdDAgMCAwICRnYXAgJGJnY29sb3IsXHJcblx0MCAwIDAgJGRvdWJsZSAkY29sb3I7XHJcblx0bWFyZ2luICAgICA6ICRkb3VibGU7XHJcblxyXG5cdEBpZiAkbm9tYXJnaW4ge1xyXG5cdFx0bWFyZ2luIDogMDtcclxuXHR9XHJcbn1cclxuXHJcblxyXG4vLyBBTklNQVRJT05TXHJcbkBtaXhpbiBrZXlmcmFtZXMoJGFuaW1hdGlvbi1uYW1lKSB7XHJcblx0QGtleWZyYW1lcyAjeyRhbmltYXRpb24tbmFtZX0ge1xyXG5cdFx0QGNvbnRlbnQ7XHJcblx0fVxyXG59XHJcblxyXG5cclxuLyogQGtleWZyYW1lcyBkdXJhdGlvbiB8IHRpbWluZy1mdW5jdGlvbiB8IGRlbGF5IHxcclxuICAgaXRlcmF0aW9uLWNvdW50IHwgZGlyZWN0aW9uIHwgZmlsbC1tb2RlIHwgcGxheS1zdGF0ZSB8IG5hbWVcclxuXHJcbkVHOiBhbmltYXRpb246IDNzIGVhc2UtaW4gMXMgMiByZXZlcnNlIGJvdGggcGF1c2VkIHNsaWRlaW47ICovXHJcblxyXG5AbWl4aW4gYW5pbWF0aW9uKCRzdHIpIHtcclxuXHRhbmltYXRpb24gOiAjeyRzdHJ9O1xyXG59XHJcblxyXG4vKiBXUkFQICovXHJcbkBtaXhpbiB3cmFwKCR3aWR0aCA6ICR3cmFwKSB7XHJcblx0bWF4LXdpZHRoIDogI3skd2lkdGh9cHg7XHJcblx0bWFyZ2luICAgIDogMCBhdXRvO1xyXG59XHJcblxyXG4vKiBFTExJUCAqL1xyXG5AbWl4aW4gZWxsaXBzaXMoJHdpZHRoLCAkd2lkdGhUeXBlIDogbWF4LXdpZHRoKSB7XHJcblx0I3skd2lkdGhUeXBlfSA6ICR3aWR0aDtcclxuXHR0ZXh0LW92ZXJmbG93IDogZWxsaXBzaXM7XHJcblx0b3ZlcmZsb3cgICAgICA6IGhpZGRlbjtcclxuXHR3aGl0ZS1zcGFjZSAgIDogbm93cmFwO1xyXG59XHJcblxyXG4vKiBUUkFOU0lUSU9OUyAqL1xyXG5AbWl4aW4gdHJhbnNpdGlvbigkZHVyYXRpb24gOiAuMXMsICRwcm9wZXJ0eSA6IGFsbCwgJGVhc2luZyA6IGVhc2UtaW4tb3V0LCAkZGVsYXk6bnVsbCkge1xyXG5cdC13ZWJraXQtdHJhbnNpdGlvbiA6ICRkdXJhdGlvbiAkcHJvcGVydHkgJGVhc2luZyAkZGVsYXk7XHJcblx0dHJhbnNpdGlvbiAgICAgICAgIDogJGR1cmF0aW9uICRwcm9wZXJ0eSAkZWFzaW5nICRkZWxheTtcclxufVxyXG5cclxuLyogQlJFQUsgUE9JTlRTICovXHJcblxyXG4vKiAtLSBtaW4td2lkdGggYnkgZGVmYXVsdFxyXG4gICAtLSBpZiAybmQgcGFyYW1ldGVyIGlzICdtYXgtd2lkdGgnLCBtYXgtd2lkdGggdXNlZCBpbnN0ZWFkXHJcbiAgIC0tIGlmICR1bnRpbCBpcyBhZGRlZCwgJHBvaW50IGJlY29tZXMgbWluLXdpZHRoIGFuZCAkdW50aWwgaXMgbWF4LXdpZHRoICovXHJcbkBtaXhpbiBicCgkcG9pbnQsICRtaW5tYXggOiBtaW4td2lkdGgsICR1bnRpbDpudWxsKSB7XHJcblx0QGlmKCRtaW5tYXggPT0gXCJtYXgtd2lkdGhcIikge1xyXG5cclxuXHRcdCRwb2ludCA6ICRwb2ludCAtIDE7XHJcblxyXG5cdH1cclxuXHRAaWYoJHVudGlsKSB7XHJcblxyXG5cdFx0JHVudGlsIDogJHVudGlsIC0gMTtcclxuXHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZCAoJG1pbm1heDogI3skcG9pbnR9cHgpIGFuZCAobWF4LXdpZHRoOiAjeyR1bnRpbH1weCkgeyBAY29udGVudDsgfVxyXG5cclxuXHR9IEBlbHNlIHtcclxuXHJcblx0XHRAbWVkaWEgc2NyZWVuIGFuZCAoJG1pbm1heDogI3skcG9pbnR9cHgpIHsgQGNvbnRlbnQ7IH1cclxuXHJcblx0fVxyXG59XHJcblxyXG5cclxuLyogTElTVCBNQVJHSU5TICovXHJcbkBtaXhpbiBsaXN0LW1hcmdpbigkbWFyZ2luLCAkZGlyZWN0aW9uLCAkbGFzdDpcImxhc3Qtb2YtdHlwZVwiKSB7XHJcblx0QGlmICRkaXJlY3Rpb24gPT0gdiB7XHJcblx0XHRtYXJnaW4tYm90dG9tIDogJG1hcmdpbjtcclxuXHJcblx0XHRAaWYoJGxhc3QgPT0gXCJsYXN0LW9mLXR5cGVcIikge1xyXG5cdFx0XHQmOmxhc3Qtb2YtdHlwZSB7XHJcblx0XHRcdFx0bWFyZ2luLWJvdHRvbSA6IDA7XHJcblx0XHRcdH1cclxuXHRcdH0gQGVsc2UgaWYoJGxhc3QgPT0gXCJsYXN0LWNoaWxkXCIpIHtcclxuXHRcdFx0JjpsYXN0LWNoaWxkIHtcclxuXHRcdFx0XHRtYXJnaW4tYm90dG9tIDogMDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0gQGVsc2UgaWYoJGRpcmVjdGlvbiA9PSBoKSB7XHJcblx0XHRtYXJnaW4tcmlnaHQgIDogJG1hcmdpbjtcclxuXHJcblx0XHRAaWYoJGxhc3QgPT0gXCJsYXN0LW9mLXR5cGVcIikge1xyXG5cdFx0XHQmOmxhc3Qtb2YtdHlwZSB7XHJcblx0XHRcdFx0bWFyZ2luLXJpZ2h0IDogMDtcclxuXHRcdFx0fVxyXG5cdFx0fSBAZWxzZSBpZigkbGFzdCA9PSBcImxhc3QtY2hpbGRcIikge1xyXG5cdFx0XHQmOmxhc3QtY2hpbGQge1xyXG5cdFx0XHRcdG1hcmdpbi1yaWdodCA6IDA7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8qIENBTEMgKi9cclxuQG1peGluIGNhbGMoJHByb3BlcnR5LCAkZXhwcmVzc2lvbikge1xyXG5cdCN7JHByb3BlcnR5fTogLXdlYmtpdC1jYWxjKCN7JGV4cHJlc3Npb259KTtcclxuXHQjeyRwcm9wZXJ0eX06IC1tb3otY2FsYygjeyRleHByZXNzaW9ufSk7XHJcblx0I3skcHJvcGVydHl9OiAtby1jYWxjKCN7JGV4cHJlc3Npb259KTtcclxuXHQjeyRwcm9wZXJ0eX06IGNhbGMoI3skZXhwcmVzc2lvbn0pO1xyXG59XHJcblxyXG5cclxuLyogRkxFWEJPWCAqL1xyXG5cclxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEZMRVhCT1ggTUlYSU5cclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEBkZXNjICBMZXQncyB5b3UgY3JlYXRlIGZsZXhib3ggY29udGFpbmVyIGFuZCBpdGVtIGNzcyB3aXRoIDIgbWl4aW5zXHJcblxyXG4gKiBAdXNhZ2VcclxuICpcclxuICogICAgQGluY2x1ZGUgZmxleGJveC1jb250YWluZXIoXHJcbiAqXHJcbiAqICAgICAgICAkZGlzcGxheSA6IGZsZXgsICAgICAgICBbZmxleCAvIGlubGluZV1cclxuICogICAgICAgICRkaXJlY3Rpb24gOiByb3csICAgICAgIFtyb3cgLyByb3ctcmV2ZXJzZSAvIGNvbHVtbiAvIGNvbHVtbi1yZXZlcnNlXVxyXG4gKiAgICAgICAgJHdyYXAgOiBub3dyYXAsICAgICAgICAgW25vd3JhcCAvIHdyYXAgLyB3cmFwLXJldmVyc2VdXHJcbiAqICAgICAgICAkanVzdGlmeSA6IHN0YXJ0LCAgICAgICBbc3RhcnQgLyBlbmQgLyBjZW50ZXIgLyBiZXR3ZWVuIC8gYXJvdW5kXVxyXG4gKiAgICAgICAgJGFsaWduQ29udGVudCA6IHN0YXJ0LCAgW3N0YXJ0IC8gZW5kIC8gY2VudGVyIC8gYmV0d2VlbiAvIGFyb3VuZCAvIHN0cmV0Y2hdXHJcbiAqICAgICAgICAkYWxpZ25JdGVtcyA6IGNlbnRlciAgICAgW3N0YXJ0IC8gZW5kIC8gY2VudGVyIC8gYmFzZWxpbmUgLyBzdHJldGNoXVxyXG4gKlxyXG4gKiAgICApO1xyXG4gKlxyXG4gKlxyXG4gKiAgICBAaW5jbHVkZSBmbGV4Ym94LWl0ZW0oXHJcbiAqXHJcbiAqICAgICAgICAkb3JkZXIgOiBudWxsLCAgICAgICAgICBbaW50ZWdlcl0gLS0gY3VzdG9tIG9yZGVyIG9mIGl0ZW1zXHJcbiAqICAgICAgICAkZ3JvdyA6IDAsICAgICAgICAgICAgICBbMCAvIDFdXHJcbiAqICAgICAgICAkc2hyaW5rIDogMSwgICAgICAgICAgICBbMCAvIDFdXHJcbiAqICAgICAgICAkYmFzaXMgOiBhdXRvLCAgICAgICAgICBbYXV0byAvIDxsZW5ndGg+XVxyXG4gKiAgICAgICAgJGFsaWduU2VsZiA6IGF1dG8gICAgICAgW2F1dG8gLyBzdGFydCAvIGVuZCAvIGNlbnRlciAvIGJhc2VsaW5lIC8gc3RyZXRjaF1cclxuICpcclxuICogICAgKTtcclxuICpcclxuICogQGF1dGhvciBtYXhveXM0NVxyXG4gKiBAdmVyc2lvbiAwLjFcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5AbWl4aW4gZmxleGJveC1jb250YWluZXIoJGRpc3BsYXkgOiBmbGV4LCAkZGlyZWN0aW9uIDogcm93LCAkd3JhcCA6IG5vd3JhcCwgJGp1c3RpZnkgOiBzdGFydCwgJGFsaWduQ29udGVudCA6IHN0YXJ0LCAkYWxpZ25JdGVtcyA6IGNlbnRlcikge1xyXG5cclxuXHRAaWYgJGRpc3BsYXkgPT0gZmxleCB7XHJcblx0XHRkaXNwbGF5IDogLXdlYmtpdC1ib3g7XHJcblx0XHRkaXNwbGF5IDogLW1vei1ib3g7XHJcblx0XHRkaXNwbGF5IDogLW1zLWZsZXhib3g7XHJcblx0XHRkaXNwbGF5IDogLXdlYmtpdC1mbGV4O1xyXG5cdFx0ZGlzcGxheSA6IGZsZXg7XHJcblx0fSBAZWxzZSBpZiAkZGlzcGxheSA9PSBpbmxpbmUge1xyXG5cdFx0ZGlzcGxheSA6IC13ZWJraXQtYm94O1xyXG5cdFx0ZGlzcGxheSA6IC1tb3otYm94O1xyXG5cdFx0ZGlzcGxheSA6IC1tcy1pbmxpbmUtZmxleGJveDtcclxuXHRcdGRpc3BsYXkgOiAtd2Via2l0LWlubGluZS1mbGV4O1xyXG5cdFx0ZGlzcGxheSA6IGlubGluZS1mbGV4O1xyXG5cdH1cclxuXHJcblx0QGlmICRkaXJlY3Rpb24gPT0gcm93IHtcclxuXHRcdC13ZWJraXQtYm94LWRpcmVjdGlvbiAgOiBub3JtYWw7XHJcblx0XHQtbW96LWJveC1kaXJlY3Rpb24gICAgIDogbm9ybWFsO1xyXG5cdFx0LXdlYmtpdC1ib3gtb3JpZW50ICAgICA6IGhvcml6b250YWw7XHJcblx0XHQtbW96LWJveC1vcmllbnQgICAgICAgIDogaG9yaXpvbnRhbDtcclxuXHRcdC13ZWJraXQtZmxleC1kaXJlY3Rpb24gOiByb3c7XHJcblx0XHQtbXMtZmxleC1kaXJlY3Rpb24gICAgIDogcm93O1xyXG5cdFx0ZmxleC1kaXJlY3Rpb24gICAgICAgICA6IHJvdztcclxuXHR9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gcm93LXJldmVyc2Uge1xyXG5cdFx0LXdlYmtpdC1ib3gtZGlyZWN0aW9uICA6IHJldmVyc2U7XHJcblx0XHQtbW96LWJveC1kaXJlY3Rpb24gICAgIDogcmV2ZXJzZTtcclxuXHRcdC13ZWJraXQtYm94LW9yaWVudCAgICAgOiBob3Jpem9udGFsO1xyXG5cdFx0LW1vei1ib3gtb3JpZW50ICAgICAgICA6IGhvcml6b250YWw7XHJcblx0XHQtd2Via2l0LWZsZXgtZGlyZWN0aW9uIDogcm93LXJldmVyc2U7XHJcblx0XHQtbXMtZmxleC1kaXJlY3Rpb24gICAgIDogcm93LXJldmVyc2U7XHJcblx0XHRmbGV4LWRpcmVjdGlvbiAgICAgICAgIDogcm93LXJldmVyc2U7XHJcblx0fSBAZWxzZSBpZiAkZGlyZWN0aW9uID09IGNvbHVtbiB7XHJcblx0XHQtd2Via2l0LWJveC1kaXJlY3Rpb24gIDogbm9ybWFsO1xyXG5cdFx0LW1vei1ib3gtZGlyZWN0aW9uICAgICA6IG5vcm1hbDtcclxuXHRcdC13ZWJraXQtYm94LW9yaWVudCAgICAgOiB2ZXJ0aWNhbDtcclxuXHRcdC1tb3otYm94LW9yaWVudCAgICAgICAgOiB2ZXJ0aWNhbDtcclxuXHRcdC13ZWJraXQtZmxleC1kaXJlY3Rpb24gOiBjb2x1bW47XHJcblx0XHQtbXMtZmxleC1kaXJlY3Rpb24gICAgIDogY29sdW1uO1xyXG5cdFx0ZmxleC1kaXJlY3Rpb24gICAgICAgICA6IGNvbHVtbjtcclxuXHR9IEBlbHNlIGlmICRkaXJlY3Rpb24gPT0gY29sdW1uLXJldmVyc2Uge1xyXG5cdFx0LXdlYmtpdC1ib3gtZGlyZWN0aW9uICA6IHJldmVyc2U7XHJcblx0XHQtbW96LWJveC1kaXJlY3Rpb24gICAgIDogcmV2ZXJzZTtcclxuXHRcdC13ZWJraXQtYm94LW9yaWVudCAgICAgOiB2ZXJ0aWNhbDtcclxuXHRcdC1tb3otYm94LW9yaWVudCAgICAgICAgOiB2ZXJ0aWNhbDtcclxuXHRcdC13ZWJraXQtZmxleC1kaXJlY3Rpb24gOiBjb2x1bW4tcmV2ZXJzZTtcclxuXHRcdC1tcy1mbGV4LWRpcmVjdGlvbiAgICAgOiBjb2x1bW4tcmV2ZXJzZTtcclxuXHRcdGZsZXgtZGlyZWN0aW9uICAgICAgICAgOiBjb2x1bW4tcmV2ZXJzZTtcclxuXHR9XHJcblxyXG5cdC13ZWJraXQtZmxleC13cmFwICAgOiAkd3JhcDtcclxuXHQtbXMtZmxleC13cmFwICAgICAgIDogJHdyYXA7XHJcblx0ZmxleC13cmFwICAgICAgICAgICA6ICR3cmFwO1xyXG5cclxuXHRAaWYgJGp1c3RpZnkgPT0gc3RhcnQge1xyXG5cdFx0LXdlYmtpdC1ib3gtcGFjayAgICAgICAgOiBzdGFydDtcclxuXHRcdC1tb3otYm94LXBhY2sgICAgICAgICAgIDogc3RhcnQ7XHJcblx0XHQtd2Via2l0LWp1c3RpZnktY29udGVudCA6IGZsZXgtc3RhcnQ7XHJcblx0XHQtbXMtZmxleC1wYWNrICAgICAgICAgICA6IHN0YXJ0O1xyXG5cdFx0anVzdGlmeS1jb250ZW50ICAgICAgICAgOiBmbGV4LXN0YXJ0O1xyXG5cdH0gQGVsc2UgaWYgJGp1c3RpZnkgPT0gZW5kIHtcclxuXHRcdC13ZWJraXQtYm94LXBhY2sgICAgICAgIDogZW5kO1xyXG5cdFx0LW1vei1ib3gtcGFjayAgICAgICAgICAgOiBlbmQ7XHJcblx0XHQtd2Via2l0LWp1c3RpZnktY29udGVudCA6IGZsZXgtZW5kO1xyXG5cdFx0LW1zLWZsZXgtcGFjayAgICAgICAgICAgOiBlbmQ7XHJcblx0XHRqdXN0aWZ5LWNvbnRlbnQgICAgICAgICA6IGZsZXgtZW5kO1xyXG5cdH0gQGVsc2UgaWYgJGp1c3RpZnkgPT0gY2VudGVyIHtcclxuXHRcdC13ZWJraXQtYm94LXBhY2sgICAgICAgIDogY2VudGVyO1xyXG5cdFx0LW1vei1ib3gtcGFjayAgICAgICAgICAgOiBjZW50ZXI7XHJcblx0XHQtd2Via2l0LWp1c3RpZnktY29udGVudCA6IGNlbnRlcjtcclxuXHRcdC1tcy1mbGV4LXBhY2sgICAgICAgICAgIDogY2VudGVyO1xyXG5cdFx0anVzdGlmeS1jb250ZW50ICAgICAgICAgOiBjZW50ZXI7XHJcblx0fSBAZWxzZSBpZiAkanVzdGlmeSA9PSBiZXR3ZWVuIHtcclxuXHRcdC13ZWJraXQtYm94LXBhY2sgICAgICAgIDoganVzdGlmeTtcclxuXHRcdC1tb3otYm94LXBhY2sgICAgICAgICAgIDoganVzdGlmeTtcclxuXHRcdC13ZWJraXQtanVzdGlmeS1jb250ZW50IDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdC1tcy1mbGV4LXBhY2sgICAgICAgICAgIDoganVzdGlmeTtcclxuXHRcdGp1c3RpZnktY29udGVudCAgICAgICAgIDogc3BhY2UtYmV0d2VlbjtcclxuXHR9IEBlbHNlIGlmICRqdXN0aWZ5ID09IGFyb3VuZCB7XHJcblx0XHQtd2Via2l0LWJveC1wYWNrICAgICAgICA6IGp1c3RpZnk7XHJcblx0XHQtbW96LWJveC1wYWNrICAgICAgICAgICA6IGp1c3RpZnk7XHJcblx0XHQtd2Via2l0LWp1c3RpZnktY29udGVudCA6IHNwYWNlLWFyb3VuZDtcclxuXHRcdC1tcy1mbGV4LXBhY2sgICAgICAgICAgIDogZGlzdHJpYnV0ZTtcclxuXHRcdGp1c3RpZnktY29udGVudCAgICAgICAgIDogc3BhY2UtYXJvdW5kO1xyXG5cdH1cclxuXHJcblx0QGlmICRhbGlnbkNvbnRlbnQgPT0gc3RhcnQge1xyXG5cdFx0LXdlYmtpdC1hbGlnbi1jb250ZW50IDogZmxleC1zdGFydDtcclxuXHRcdC1tcy1mbGV4LWxpbmUtcGFjayAgICA6IHN0YXJ0O1xyXG5cdFx0YWxpZ24tY29udGVudCAgICAgICAgIDogZmxleC1zdGFydDtcclxuXHR9IEBlbHNlIGlmICRhbGlnbkNvbnRlbnQgPT0gZW5kIHtcclxuXHRcdC13ZWJraXQtYWxpZ24tY29udGVudCA6IGZsZXgtZW5kO1xyXG5cdFx0LW1zLWZsZXgtbGluZS1wYWNrICAgIDogZW5kO1xyXG5cdFx0YWxpZ24tY29udGVudCAgICAgICAgIDogZmxleC1lbmQ7XHJcblx0fSBAZWxzZSBpZiAkYWxpZ25Db250ZW50ID09IGNlbnRlciB7XHJcblx0XHQtd2Via2l0LWFsaWduLWNvbnRlbnQgOiBjZW50ZXI7XHJcblx0XHQtbXMtZmxleC1saW5lLXBhY2sgICAgOiBjZW50ZXI7XHJcblx0XHRhbGlnbi1jb250ZW50ICAgICAgICAgOiBjZW50ZXI7XHJcblx0fSBAZWxzZSBpZiAkYWxpZ25Db250ZW50ID09IGJldHdlZW4ge1xyXG5cdFx0LXdlYmtpdC1hbGlnbi1jb250ZW50IDogc3BhY2UtYmV0d2VlbjtcclxuXHRcdC1tcy1mbGV4LWxpbmUtcGFjayAgICA6IGp1c3RpZnk7XHJcblx0XHRhbGlnbi1jb250ZW50ICAgICAgICAgOiBzcGFjZS1iZXR3ZWVuO1xyXG5cdH0gQGVsc2UgaWYgJGFsaWduQ29udGVudCA9PSBhcm91bmQge1xyXG5cdFx0LXdlYmtpdC1hbGlnbi1jb250ZW50IDogc3BhY2UtYXJvdW5kO1xyXG5cdFx0LW1zLWZsZXgtbGluZS1wYWNrICAgIDogZGlzdHJpYnV0ZTtcclxuXHRcdGFsaWduLWNvbnRlbnQgICAgICAgICA6IHNwYWNlLWFyb3VuZDtcclxuXHR9IEBlbHNlIGlmICRhbGlnbkNvbnRlbnQgPT0gc3RyZXRjaCB7XHJcblx0XHQtd2Via2l0LWFsaWduLWNvbnRlbnQgOiBzdHJldGNoO1xyXG5cdFx0LW1zLWZsZXgtbGluZS1wYWNrICAgIDogc3RyZXRjaDtcclxuXHRcdGFsaWduLWNvbnRlbnQgICAgICAgICA6IHN0cmV0Y2g7XHJcblx0fVxyXG5cclxuXHRAaWYgJGFsaWduSXRlbXMgPT0gc3RhcnQgb3IgZW5kIHtcclxuXHRcdC13ZWJraXQtYWxpZ24taXRlbXMgOiBmbGV4LSArICRhbGlnbkl0ZW1zO1xyXG5cdFx0YWxpZ24taXRlbXMgICAgICAgICA6IGZsZXgtICsgJGFsaWduSXRlbXM7XHJcblx0fVxyXG5cclxuXHQtd2Via2l0LWFsaWduLWl0ZW1zIDogJGFsaWduSXRlbXM7XHJcblx0YWxpZ24taXRlbXMgICAgICAgICA6ICRhbGlnbkl0ZW1zO1xyXG5cdC13ZWJraXQtYm94LWFsaWduICAgOiAkYWxpZ25JdGVtcztcclxuXHQtbW96LWJveC1hbGlnbiAgICAgIDogJGFsaWduSXRlbXM7XHJcblx0LW1zLWZsZXgtYWxpZ24gICAgICA6ICRhbGlnbkl0ZW1zO1xyXG59XHJcblxyXG5AbWl4aW4gZmxleGJveC1pdGVtKCRvcmRlciA6IG51bGwsICRncm93IDogMCwgJHNocmluayA6IDEsICRiYXNpcyA6IGF1dG8sICRhbGlnblNlbGYgOiBhdXRvKSB7XHJcblxyXG5cdEBpZiAkb3JkZXIgIT0gbnVsbCB7XHJcblx0XHQtd2Via2l0LWJveC1vcmRpbmFsLWdyb3VwIDogJG9yZGVyICsgMTtcclxuXHRcdC1tb3otYm94LW9yZGluYWwtZ3JvdXAgICAgOiAkb3JkZXIgKyAxO1xyXG5cdFx0LXdlYmtpdC1vcmRlciAgICAgICAgICAgICA6ICRvcmRlcjtcclxuXHRcdC1tcy1mbGV4LW9yZGVyICAgICAgICAgICAgOiAkb3JkZXI7XHJcblx0XHRvcmRlciAgICAgICAgICAgICAgICAgICAgIDogJG9yZGVyO1xyXG5cdH1cclxuXHQtd2Via2l0LWJveC1mbGV4ICAgIDogJGdyb3c7XHJcblx0LW1vei1ib3gtZmxleCAgICAgICA6ICRncm93O1xyXG5cdC13ZWJraXQtZmxleCAgICAgICAgOiAkZ3JvdyAkc2hyaW5rICRiYXNpcztcclxuXHQtbXMtZmxleCAgICAgICAgICAgIDogJGdyb3cgJHNocmluayAkYmFzaXM7XHJcblx0ZmxleCAgICAgICAgICAgICAgICA6ICRncm93ICRzaHJpbmsgJGJhc2lzO1xyXG5cdC13ZWJraXQtYWxpZ24tc2VsZiAgOiAkYWxpZ25TZWxmO1xyXG5cdC1tcy1mbGV4LWl0ZW0tYWxpZ24gOiAkYWxpZ25TZWxmO1xyXG5cdGFsaWduLXNlbGYgICAgICAgICAgOiAkYWxpZ25TZWxmO1xyXG5cclxuXHRAaWYgJGFsaWduU2VsZiA9PSBzdGFydCBvciBlbmQge1xyXG5cdFx0LXdlYmtpdC1hbGlnbi1zZWxmICA6IGZsZXgtICsgJGFsaWduU2VsZjtcclxuXHRcdC1tcy1mbGV4LWl0ZW0tYWxpZ24gOiAkYWxpZ25TZWxmO1xyXG5cdFx0YWxpZ24tc2VsZiAgICAgICAgICA6IGZsZXgtICsgJGFsaWduU2VsZjtcclxuXHR9XHJcblxyXG59XHJcblxyXG4vLyBJTkxJTkUtQkxPQ0tcclxuQG1peGluIGlubGluZS1ibG9jaygkYWxpZ24gOiBtaWRkbGUpIHtcclxuXHRkaXNwbGF5ICAgICAgICA6IGlubGluZS1ibG9jaztcclxuXHR2ZXJ0aWNhbC1hbGlnbiA6ICRhbGlnbjtcclxufVxyXG5cclxuLy8gVEFCTEUtQ0VMTFxyXG5AbWl4aW4gdGFibGUtY2VsbCgkYWxpZ24gOiBtaWRkbGUpIHtcclxuXHRkaXNwbGF5ICAgICAgICA6IHRhYmxlLWNlbGw7XHJcblx0dmVydGljYWwtYWxpZ24gOiAkYWxpZ247XHJcbn1cclxuXHJcbi8vIEJPUkRFUiBSQURJVVNcclxuQG1peGluIGJvcmRlci1yYWRpdXMoJHJhZCA6IC4ycmVtKSB7XHJcblx0Ym9yZGVyLXJhZGl1cyA6ICRyYWQ7XHJcbn1cclxuXHJcbi8qIEFTUEVDVCBSQVRJTyAqL1xyXG5AbWl4aW4gYXNwZWN0LXJhdGlvKCR3aWR0aCwgJGhlaWdodCkge1xyXG5cdHBvc2l0aW9uIDogcmVsYXRpdmU7XHJcblx0JjpiZWZvcmUge1xyXG5cdFx0ZGlzcGxheSAgICAgOiBibG9jaztcclxuXHRcdGNvbnRlbnQgICAgIDogXCJcIjtcclxuXHRcdHdpZHRoICAgICAgIDogMTAwJTtcclxuXHRcdHBhZGRpbmctdG9wIDogKCRoZWlnaHQgLyAkd2lkdGgpICogMTAwJTtcclxuXHR9XHJcblx0PiAua2VlcC1yYXRpbyB7XHJcblx0XHRwb3NpdGlvbiA6IGFic29sdXRlO1xyXG5cdFx0dG9wICAgICAgOiAwO1xyXG5cdFx0bGVmdCAgICAgOiAwO1xyXG5cdFx0cmlnaHQgICAgOiAwO1xyXG5cdFx0Ym90dG9tICAgOiAwO1xyXG5cdH1cclxufVxyXG5cclxuLyogSEFSRFdBUkUgQUNDRUwgKi9cclxuQG1peGluIGFjY2VsKCkge1xyXG5cdC13ZWJraXQtdHJhbnNmb3JtIDogdHJhbnNsYXRlWigwKTtcclxuXHQtbW96LXRyYW5zZm9ybSAgICA6IHRyYW5zbGF0ZVooMCk7XHJcblx0LW1zLXRyYW5zZm9ybSAgICAgOiB0cmFuc2xhdGVaKDApO1xyXG5cdC1vLXRyYW5zZm9ybSAgICAgIDogdHJhbnNsYXRlWigwKTtcclxuXHR0cmFuc2Zvcm0gICAgICAgICA6IHRyYW5zbGF0ZVooMCk7XHJcbn1cclxuXHJcbi8qIENFTlRSRUQgQ09OVEVOVCAqL1xyXG5AbWl4aW4gY2VudHJlZCgkY2VudHJlZElubmVyLCAkYWx3YXlzOmZhbHNlKSB7XHJcblxyXG5cdCYge1xyXG5cdFx0dGV4dC1hbGlnbiA6IGNlbnRlcjtcclxuXHJcblx0XHRAaWYgJGFsd2F5cyA9PSBmYWxzZSB7XHJcblxyXG5cdFx0XHRAaW5jbHVkZSBicCgkc2NyLXdyYXApIHtcclxuXHJcblx0XHRcdFx0aGVpZ2h0ICAgICA6IDEwMCU7XHJcblxyXG5cdFx0XHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0XHRcdEBpbmNsdWRlIGlubGluZS1ibG9jaztcclxuXHRcdFx0XHRcdGNvbnRlbnQgOiAnJztcclxuXHRcdFx0XHRcdGhlaWdodCAgOiAxMDAlO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0LiN7JGNlbnRyZWRJbm5lcn0ge1xyXG5cdFx0XHRcdFx0QGluY2x1ZGUgaW5saW5lLWJsb2NrO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH1cclxuXHJcblx0XHR9XHJcblxyXG5cdFx0QGlmICRhbHdheXMgPT0gdHJ1ZSB7XHJcblxyXG5cdFx0XHRoZWlnaHQgICAgIDogMTAwJTtcclxuXHJcblx0XHRcdCY6YmVmb3JlIHtcclxuXHRcdFx0XHRAaW5jbHVkZSBpbmxpbmUtYmxvY2s7XHJcblx0XHRcdFx0Y29udGVudCA6ICcnO1xyXG5cdFx0XHRcdGhlaWdodCAgOiAxMDAlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQuI3skY2VudHJlZElubmVyfSB7XHJcblx0XHRcdFx0QGluY2x1ZGUgaW5saW5lLWJsb2NrO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0fVxyXG5cdH1cclxuXHJcbn1cclxuXHJcbi8qIFRBUkdFVCBJRTEwKyAqL1xyXG5AbWl4aW4gaWUxMHBsdXMoKSB7XHJcblx0QG1lZGlhIGFsbCBhbmQgKC1tcy1oaWdoLWNvbnRyYXN0OiBub25lKSwgKC1tcy1oaWdoLWNvbnRyYXN0OiBhY3RpdmUpIHtcclxuXHRcdEBjb250ZW50O1xyXG5cdH1cclxufVxyXG5cclxuLyogQkcgSU1BR0UgU1ZHIFdJVEggUE5HIEZBTExCQUNLICovXHJcbkBtaXhpbiBiZ2ltZygkaW1nLCAkY29sb3I6bnVsbCwgJHBvczpjZW50ZXIgY2VudGVyLCAkcmVwZWF0Om5vLXJlcGVhdCwgJHNpemU6YXV0bykge1xyXG5cdGJhY2tncm91bmQ6ICRjb2xvciB1cmwoJGltZ2Fzc2V0cyArICRpbWcgKyAnLnBuZycpICRwb3MgJHJlcGVhdDtcclxuXHRiYWNrZ3JvdW5kOiAkY29sb3IgdXJsKCRpbWdhc3NldHMgKyAkaW1nICsgJy5zdmcnKSAkcG9zICRyZXBlYXQ7XHJcblx0YmFja2dyb3VuZC1zaXplOiAkc2l6ZTtcclxufVxyXG5cclxuLyogQU5JTUFURUQgUE5HICovXHJcbi8qIE1peGluIHRvIHJlcGxpY2F0ZSBhbiBhbmltYXRlZCBHSUYgdXNpbmcgS2V5ZnJhbWVzIGFuZCBhIFBORyBTcHJpdGUgaW1hZ2UuXHJcblxyXG5cdCRudW1iZXJPZlN0ZXBzIFx0PSB0aGUgbnVtYmVyIG9mIGZyYW1lcyB0byBzdGVwIGJldHdlZW4gKG5vIGxpbWl0IHRvIG51bWJlciBvZiBzdGVwcylcclxuXHQkYW5pbU5hbWUgXHRcdD0gcHVyZWx5IHVzZWQgYXMgdGhlIGFuaW1hdGlvbiBuYW1lIHRvIGF2b2lkIGR1cGxpY2F0ZSBhbmltYXRpb25zXHJcblx0JGltYWdlU2l6ZSBcdFx0PSB0aGUgd2lkdGggb3IgaGVpZ2h0IG9mIHRoZSBQTkcgaW1hZ2Ugd2hpY2ggbmVlZHMgdG8gYmUgc2hvd24gaW4gZWFjaCBmcmFtZVxyXG5cdCRkdXJhdGlvbiBcdFx0PSB0aGUgdG90YWwgdGltZSBmb3IgdGhlIGFuaW1hdGlvbiBpbiBzZWNvbmRzXHJcblx0JHBsYXlDb3VudFx0XHQ9IHRoZSB3YXkgdGhlIGFuaW1hdGlvbiBpcyBwbGF5ZWQgKGxpbmVhciwgaW5maW5pdGUsIGlub3V0KVxyXG5cclxuXHQqKiByZXF1aXJlcyBhdXRvLXByZWZpeGVyIHRvIHN1cHBvcnQgYWxsIG1vZGVybiBicm93c2Vyc1xyXG5cdCoqIFJlcXVpcmVzICdjb21wYXNzL2NzczMnICovXHJcblxyXG5AbWl4aW4gYW5pbWF0ZWRQTkcoJG51bWJlck9mU3RlcHMsICRhbmltTmFtZSwgJGltYWdlU2l6ZSwgJGFuaW1EaXJlY3Rpb24sICRkdXJhdGlvbiwgJHBsYXlDb3VudCkge1xyXG5cclxuXHRhbmltYXRpb246ICRhbmltTmFtZSAkZHVyYXRpb24gJHBsYXlDb3VudDtcclxuXHJcblx0LyogcGxhY2VzIHRoZSBrZXlmcmFtZXMgYW5pbWF0aW9uIG91dHNpZGUgb2YgdGhlIHNlbGVjdG9yICovXHJcblx0QGF0LXJvb3Qge1xyXG5cclxuXHRcdEBrZXlmcmFtZXMgI3skYW5pbU5hbWV9IHtcclxuXHJcblx0XHRcdDAlIHsgYmFja2dyb3VuZC1wb3NpdGlvbjowIDA7IH1cclxuXHRcdFx0JHN0ZXBDb3VudDogJG51bWJlck9mU3RlcHM7XHJcblx0XHRcdCRzdGVwOiAxO1xyXG5cclxuXHRcdFx0QHdoaWxlICRzdGVwQ291bnQgPiAxIHtcclxuXHJcblx0XHRcdFx0JGtleWZyYW1lUGVyY2VudGFnZTogKDEwMCAvICRudW1iZXJPZlN0ZXBzKSAqICRzdGVwO1xyXG5cclxuXHRcdFx0XHQkaW1hZ2VQb3M6IDA7XHJcblxyXG5cdFx0XHRcdEBpZiAkc3RlcCA+IDEge1xyXG5cdFx0XHRcdFx0JGltYWdlUG9zOiAkaW1hZ2VTaXplICogKCRzdGVwIC0gMSk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQkc3RlcDogJHN0ZXAgKyAxO1xyXG5cdFx0XHRcdCRzdGVwQ291bnQ6ICRzdGVwQ291bnQgLSAxO1xyXG5cclxuXHRcdFx0XHRAaWYgJGFuaW1EaXJlY3Rpb24gPT0gaG9yaXpvbnRhbCB7XHJcblx0XHRcdFx0XHQjeyRrZXlmcmFtZVBlcmNlbnRhZ2UgKyAnJSd9IHtcclxuXHRcdFx0XHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogdW5xdW90ZSgnLScgKyAkaW1hZ2VQb3MgKyAncHgnKSAwO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdCN7JGtleWZyYW1lUGVyY2VudGFnZSArIC4wMDAxICsgJyUnfSB7XHJcblx0XHRcdFx0XHRcdGJhY2tncm91bmQtcG9zaXRpb246IHVucXVvdGUoJy0nICsgKCRpbWFnZVBvcyArICRpbWFnZVNpemUpICsgJ3B4JykgMDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IEBlbHNlIGlmICRhbmltRGlyZWN0aW9uID09IHZlcnRpY2FsIHtcclxuXHRcdFx0XHRcdCN7JGtleWZyYW1lUGVyY2VudGFnZSArICclJ30ge1xyXG5cdFx0XHRcdFx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIHVucXVvdGUoJy0nICsgJGltYWdlUG9zICsgJ3B4Jyk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0I3ska2V5ZnJhbWVQZXJjZW50YWdlICsgLjAwMDEgKyAnJSd9IHtcclxuXHRcdFx0XHRcdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCB1bnF1b3RlKCctJyArICgkaW1hZ2VQb3MgKyAkaW1hZ2VTaXplKSArICdweCcpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCRmaW5hbFBvc2l0aW9uOiAkaW1hZ2VTaXplICogKCRudW1iZXJPZlN0ZXBzIC0gMSk7XHJcblxyXG5cdFx0XHRAaWYgJGFuaW1EaXJlY3Rpb24gPT0gaG9yaXpvbnRhbCB7XHJcblx0XHRcdFx0MTAwJSB7IGJhY2tncm91bmQtcG9zaXRpb246IHVucXVvdGUoJy0nICsgJGZpbmFsUG9zaXRpb24gKyAncHgnKSAwOyB9XHJcblx0XHRcdH0gQGVsc2UgaWYgJGFuaW1EaXJlY3Rpb24gPT0gdmVydGljYWwge1xyXG5cdFx0XHRcdDEwMCUgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIHVucXVvdGUoJy0nICsgJGZpbmFsUG9zaXRpb24gKyAncHgnKTsgfVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0fVxyXG5cclxuXHR9XHJcblxyXG59XHJcblxyXG4vKiBleGFtcGxlIHVzZSAqL1xyXG4uYW5pbWF0ZWRJbWFnZSB7XHJcblx0QGluY2x1ZGUgYW5pbWF0ZWRQTkcoJG51bWJlck9mU3RlcHM6NSwgJGFuaW1OYW1lOllFU19XRV9DQU4sICRpbWFnZVNpemU6MTAwLCAkYW5pbURpcmVjdGlvbjpob3Jpem9udGFsLCAkZHVyYXRpb246MXMsICRwbGF5Q291bnQ6MiBmb3J3YXJkcyk7XHJcblx0YmFja2dyb3VuZC1pbWFnZTp1cmwoJ2h0dHA6Ly93d3cubWF4aGVuY2htYW4uY28udWsvcmFuZG9tLzEyM3Rlc3QucG5nJyk7XHJcblx0YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xyXG5cdGJhY2tncm91bmQtY29sb3I6I0ZGMDAwMDtcclxuXHRkaXNwbGF5OmJsb2NrO1xyXG5cdHdpZHRoOjEwMHB4O1xyXG5cdGhlaWdodDoxMDBweDtcclxuXHRvdmVyZmxvdzpoaWRkZW47XHJcblx0bWFyZ2luOjIwcHggYXV0bztcclxufVxyXG5cclxuLy8gQ29udGFpbiBjb250ZW50IHRvIGEgY2VydGFpbiB3aWR0aFxyXG5cclxuQG1peGluIGNvbnRhaW4oJHNpemUsICRtYXJnaW46IGF1dG8pIHtcclxuXHRtYXgtd2lkdGg6ICRzaXplO1xyXG5cclxuXHRAaWYgJG1hcmdpbiA9PSBhdXRvIHtcclxuXHRcdG1hcmdpbi1sZWZ0OiAkbWFyZ2luO1xyXG5cdFx0bWFyZ2luLXJpZ2h0OiAkbWFyZ2luO1xyXG5cdH1cclxufVxyXG5cclxuLy8gQ2VudGVyIHVzaW5nIHRyYW5zZm9ybVxyXG5cclxuQG1peGluIGNlbnRlci1pdGVtKCRwb3M6IGFic29sdXRlLCAkaDogdHJ1ZSwgJHY6IHRydWUpIHtcclxuXHRwb3NpdGlvbjogJHBvcztcclxuXHR0b3A6IDUwJTtcclxuXHRsZWZ0OiA1MCU7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XHJcblxyXG5cdEBpZiAkdiA9PSBmYWxzZSB7XHJcblx0XHR0b3A6IGF1dG87XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcblx0fVxyXG5cclxuXHRAaWYgJGggPT0gZmFsc2Uge1xyXG5cdFx0bGVmdDogYXV0bztcclxuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuXHR9XHJcbn1cclxuXHJcbi8vIFNDUkVFTiBSRUFERVIgT05MWSBDT05URU5UXHJcblxyXG5AbWl4aW4gc3Itb25seSB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHdpZHRoOiAxcHg7XHJcblx0aGVpZ2h0OiAxcHg7XHJcblx0cGFkZGluZzogMDtcclxuXHRvdmVyZmxvdzogaGlkZGVuO1xyXG5cdGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XHJcblx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuXHQtd2Via2l0LWNsaXAtcGF0aDogaW5zZXQoNTAlKTtcclxuXHRjbGlwLXBhdGg6IGluc2V0KDUwJSk7XHJcblx0Ym9yZGVyOiAwO1xyXG59IiwiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC9cclxuICAgdjIuMCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXHJcblxyXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcclxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxyXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXHJcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXHJcbmIsIHUsIGksIGNlbnRlcixcclxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcclxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXHJcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxyXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcclxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxyXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcclxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgZm9udC1zaXplOiAxMDAlO1xyXG4gIGZvbnQ6IGluaGVyaXQ7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cclxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcclxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5ib2R5IHtcclxuICBsaW5lLWhlaWdodDogMTtcclxufVxyXG5vbCwgdWwge1xyXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuYmxvY2txdW90ZSwgcSB7XHJcbiAgcXVvdGVzOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSwgcTphZnRlciB7XHJcbiAgY29udGVudDogJyc7XHJcbiAgY29udGVudDogbm9uZTtcclxufVxyXG50YWJsZSB7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBib3JkZXItc3BhY2luZzogMDtcclxufSIsIi8vIEdFTkVSSUMgU1RZTEVTXHJcbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcclxuXHRib3gtc2l6aW5nIDogYm9yZGVyLWJveDtcclxufVxyXG5cclxuaHRtbCB7XHJcblx0bGluZS1oZWlnaHQgOiAxO1xyXG5cdGZvbnQtc2l6ZToxMHB4O1xyXG59XHJcblxyXG5ib2R5IHtcclxuXHRmb250LWZhbWlseTokZm9udC0tZGVmYXVsdDtcclxufVxyXG5cclxuaW5wdXQsIGJ1dHRvbiwgc2VsZWN0LCB0ZXh0YXJlYSwgb3B0Z3JvdXAsIG9wdGlvbiB7XHJcblx0Zm9udC1mYW1pbHkgOiBpbmhlcml0O1xyXG5cdGZvbnQtc2l6ZSAgIDogaW5oZXJpdDtcclxuXHRmb250LXN0eWxlICA6IGluaGVyaXQ7XHJcblx0Zm9udC13ZWlnaHQgOiBpbmhlcml0O1xyXG5cdGNvbG9yICAgICAgIDogaW5oZXJpdDtcclxufVxyXG5cclxuaDEsIGgyLCBoMywgaDQge1xyXG5cdGxpbmUtaGVpZ2h0IDogJGxpbmVIZWlnaHQtLWRlZmF1bHQ7XHJcbn1cclxuXHJcbmgxIHtcclxuXHRmb250LXNpemUgICAgIDogNC44ZW07XHJcblx0bWFyZ2luLWJvdHRvbSA6IC44ZW07XHJcbn1cclxuXHJcbmgyIHtcclxuXHRmb250LXNpemUgICAgIDogNC4yZW07XHJcblx0bWFyZ2luLWJvdHRvbSA6IC40ZW07XHJcblxyXG5cdEBpbmNsdWRlIGJwKCRzY3ItLXBoYWJsZXQpIHtcclxuXHQgICAgZm9udC1zaXplOjVlbTtcclxuXHR9XHJcblxyXG59XHJcblxyXG5oMyB7XHJcblx0Zm9udC1zaXplICAgICA6IDIuMWVtO1xyXG5cdG1hcmdpbi1ib3R0b20gOiAuNWVtO1xyXG59XHJcblxyXG5oNCB7XHJcblx0Zm9udC1zaXplOjEuNGVtO1xyXG5cdG1hcmdpbi1ib3R0b206LjVlbTtcclxufVxyXG5cclxuYSwgYnV0dG9uLCBpbnB1dCwgdGV4dGFyZWEge1xyXG5cdG91dGxpbmU6bm9uZTtcclxufVxyXG5cclxucCB7XHJcblx0bGluZS1oZWlnaHQgICA6ICRsaW5lSGVpZ2h0LS1kZWZhdWx0O1xyXG5cdGZvbnQtc2l6ZSAgICAgOiAkZm9udFNpemUtLXNtYWxsO1xyXG5cdG1hcmdpbi1ib3R0b20gOiAxZW07XHJcblxyXG5cdCY6bGFzdC1vZi10eXBlIHtcclxuXHRcdG1hcmdpbi1ib3R0b20gOiAwO1xyXG5cdH1cclxuXHJcblx0YSB7XHJcblx0XHRAZXh0ZW5kIC5hbmNob3I7XHJcblx0XHRmb250LXdlaWdodCA6JGZvbnQtLXJlZztcclxuXHR9XHJcblxyXG5cdEBpbmNsdWRlIGJwKCRzY3ItLXBoYWJsZXQpIHtcclxuXHQgICAgZm9udC1zaXplOiRmb250U2l6ZS0tZGVmYXVsdDtcclxuXHR9XHJcblxyXG59XHJcblxyXG4uYW5jaG9yIHtcclxuXHRmb250LXNpemU6JGZvbnRTaXplLS1kZWZhdWx0O1xyXG5cdGxpbmUtaGVpZ2h0IDokbGluZUhlaWdodC0tZGVmYXVsdDtcclxuXHRvdXRsaW5lOm5vbmU7XHJcblx0dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtcclxufVxyXG5cclxuYSB7XHJcblx0dGV4dC1kZWNvcmF0aW9uIDogbm9uZTtcclxuXHRjb2xvciAgICAgICAgICAgOiBpbmhlcml0O1xyXG59XHJcblxyXG5pbWcge1xyXG5cdGRpc3BsYXkgOiBibG9jaztcclxuXHRtYXgtd2lkdGg6MTAwJTtcclxufVxyXG5cclxuc3Ryb25nIHtcclxuXHRmb250LXdlaWdodCA6ICRmb250LS1ib2xkO1xyXG59XHJcblxyXG4uaGlkZGVuIHtcclxuXHRkaXNwbGF5IDogbm9uZTtcclxufVxyXG5cclxuLmlucHV0LS1kZWZhdWx0IHtcclxuXHRAaW5jbHVkZSBpbmxpbmUtYmxvY2s7XHJcblx0Y3Vyc29yICAgICAgICAgIDogZGVmYXVsdDtcclxuLy9cdGJvcmRlciAgICAgICAgICA6IDFweCBzb2xpZCAkZ3JleS0tbGlnaHQ7XHJcblx0Ym9yZGVyLXJhZGl1cyAgIDogJHJhZGl1cztcclxuXHRiYWNrZ3JvdW5kICAgICAgOiAkd2hpdGU7XHJcblx0cGFkZGluZyAgICAgICAgIDogMS41cmVtIDFyZW07XHJcblx0Zm9udC1zaXplICAgICAgIDogJGZvbnRTaXplLS1kZWZhdWx0O1xyXG5cdG91dGxpbmUgICAgICAgICA6IG5vbmU7XHJcbi8vXHRjb2xvciAgICAgICAgICAgOiAkZ3JleS0tZGFya2VyO1xyXG5cdHRleHQtYWxpZ24gICAgICA6IGxlZnQ7XHJcblx0cG9zaXRpb24gICAgICAgIDogcmVsYXRpdmU7XHJcblx0bWluLXdpZHRoICAgICAgIDogMTUwcHg7XHJcblx0bGluZS1oZWlnaHQgICAgIDogJGxpbmVIZWlnaHQtLWRlZmF1bHQ7XHJcblx0dGV4dC1kZWNvcmF0aW9uIDogbm9uZTtcclxuXHJcblx0Jjpob3ZlciB7XHJcblx0XHRjb2xvciA6IGluaGVyaXQ7XHJcblx0fVxyXG5cclxuXHQmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcbi8vXHRcdGJvcmRlci1jb2xvciA6ICR0dXJxdW9pc2U7XHJcblx0fVxyXG59XHJcblxyXG4uc3RyaXBJbnB1dCB7XHJcblx0Ym9yZGVyICAgICA6IG5vbmU7XHJcblx0YmFja2dyb3VuZCA6IG5vbmU7XHJcblx0cGFkZGluZyAgICA6IDA7XHJcblx0Y3Vyc29yICAgICA6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcblx0QGV4dGVuZCAuc3RyaXBJbnB1dDtcclxufVxyXG5cclxuLmhpZGRlbklucHV0cyB7XHJcblx0d2lkdGggICAgOiAwLjFweDtcclxuXHRoZWlnaHQgICA6IDAuMXB4O1xyXG5cdG9wYWNpdHkgIDogMDtcclxuXHRvdmVyZmxvdyA6IGhpZGRlbjtcclxuXHRwb3NpdGlvbiA6IGFic29sdXRlO1xyXG5cdHotaW5kZXggIDogLTE7XHJcbn1cclxuXHJcbi5qdXN0aWZ5IHtcclxuXHR0ZXh0LWFsaWduIDoganVzdGlmeTtcclxufVxyXG5cclxuLndyYXBwZWQge1xyXG5cdG1heC13aWR0aCAgICA6ICR3cmFwICsgcHg7XHJcblx0bWFyZ2luLWxlZnQgIDogYXV0bztcclxuXHRtYXJnaW4tcmlnaHQgOiBhdXRvO1xyXG59XHJcblxyXG5pZnJhbWUge1xyXG5cdHdpZHRoOjEwMCU7XHJcbn1cclxuXHJcbiVjbGVhcmZpeCB7XHJcblx0JjphZnRlciB7XHJcblx0XHRjb250ZW50OiBcIlwiO1xyXG5cdFx0ZGlzcGxheTogdGFibGU7XHJcblx0XHRjbGVhcjogYm90aDtcclxuXHR9XHJcbn0iLCIvLyBDT0xPUlNcclxuXHJcbiRibGFjayA6ICMwMDAwMDA7XHJcbiR3aGl0ZSA6ICNGRkZGRkY7XHJcblxyXG4kZGFyayA6ICMxOTE5MTk7XHJcblxyXG4kaGVhZGVyLWJsdWUgOiAjY2VkOWU0O1xyXG4kaGVhZGVyLWJsdWUtbGlnaHQgOiAjZTlmMGY3O1xyXG5cclxuJGN0YS1ibHVlIDogIzJkNDk2NjtcclxuXHJcbi8vIEZPTlRTXHJcblxyXG4kZm9udC0tZGVmYXVsdCA6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4kZm9udC0tdGl0bGUgOiAnQWJyaWwgRmF0ZmFjZScsIHNlcmlmO1xyXG5cclxuLy8gV0VJR0hUU1xyXG5cclxuJGZvbnQtLXJlZyA6IDQwMDtcclxuJGZvbnQtLXNlbWlib2xkIDogNjAwO1xyXG4kZm9udC0tYm9sZCA6IDcwMDtcclxuXHJcbi8vIFNDUkVFTiBTSVpFU1xyXG5cclxuJHNjci0tcGhhYmxldCA6IDQ4MDtcclxuJHNjci0tdGFibGV0IDogNzY4O1xyXG4kc2NyLS1zdGQ6IDk2MDtcclxuJHNjci0td3JhcCA6IDEwMjQ7XHJcbiRzY3ItLXdyYXBwYWQgOiAxMjI0O1xyXG5cclxuLy8gTUlYSU4gV1JBUFxyXG5cclxuJHdyYXAgOiAxMjI0OyAvLyAxMDI0ICsgMTAwcHggcGFkZGluZyBlaXRoZXIgc2lkZVxyXG5cclxuLy8gTUlTQ1xyXG5cclxuJGZvbnRTaXplLS1kZWZhdWx0IDogMS42cmVtO1xyXG4kZm9udFNpemUtLXNtYWxsIDogMS40cmVtO1xyXG4kZm9udFNpemUtLWxhcmdlIDogMS44cmVtO1xyXG4kbGluZUhlaWdodC0tZGVmYXVsdCA6IDEuMztcclxuJHJhZGl1cyA6IC4ycmVtO1xyXG4kdnNwYWNlciA6IDRyZW07XHJcbiRpbWdhc3NldHMgOiAnLi4vaW1nLyc7XHJcbiRkdXJhdGlvbiA6IC4xczsiLCIudG5zLW91dGVyIHsgcGFkZGluZyA6IDAgIWltcG9ydGFudCB9XG5cbi50bnMtb3V0ZXIgW2hpZGRlbl0geyBkaXNwbGF5IDogbm9uZSAhaW1wb3J0YW50IH1cblxuLnRucy1vdXRlciBbYXJpYS1jb250cm9sc10sIC50bnMtb3V0ZXIgW2RhdGEtYWN0aW9uXSB7IGN1cnNvciA6IHBvaW50ZXIgfVxuXG4udG5zLW91dGVyLm1zLXRvdWNoIHsgb3ZlcmZsb3cteCA6IHNjcm9sbDsgb3ZlcmZsb3cteSA6IGhpZGRlbjsgLW1zLW92ZXJmbG93LXN0eWxlIDogbm9uZTsgLW1zLXNjcm9sbC1jaGFpbmluZyA6IG5vbmU7IC1tcy1zY3JvbGwtc25hcC10eXBlIDogbWFuZGF0b3J5OyAtbXMtc2Nyb2xsLXNuYXAtcG9pbnRzLXggOiBzbmFwSW50ZXJ2YWwoMCUsIDEwMCUpIH1cblxuLnRucy1zbGlkZXIgeyAtd2Via2l0LXRyYW5zaXRpb24gOiBhbGwgMHM7IC1tb3otdHJhbnNpdGlvbiA6IGFsbCAwczsgdHJhbnNpdGlvbiA6IGFsbCAwcyB9XG5cbi50bnMtc2xpZGVyID4gLnRucy1pdGVtIHsgLXdlYmtpdC1ib3gtc2l6aW5nIDogYm9yZGVyLWJveDsgLW1vei1ib3gtc2l6aW5nIDogYm9yZGVyLWJveDsgYm94LXNpemluZyA6IGJvcmRlci1ib3ggfVxuXG4udG5zLWhvcml6b250YWwudG5zLXN1YnBpeGVsIHsgd2hpdGUtc3BhY2UgOiBub3dyYXAgfVxuXG4udG5zLWhvcml6b250YWwudG5zLXN1YnBpeGVsID4gLnRucy1pdGVtIHsgZGlzcGxheSA6IGlubGluZS1ibG9jazsgdmVydGljYWwtYWxpZ24gOiB0b3A7IHdoaXRlLXNwYWNlIDogbm9ybWFsIH1cblxuLnRucy1ob3Jpem9udGFsLnRucy1uby1zdWJwaXhlbDphZnRlciB7IGNvbnRlbnQgOiAnJzsgZGlzcGxheSA6IHRhYmxlOyBjbGVhciA6IGJvdGggfVxuXG4udG5zLWhvcml6b250YWwudG5zLW5vLXN1YnBpeGVsID4gLnRucy1pdGVtIHsgZmxvYXQgOiBsZWZ0OyBtYXJnaW4tcmlnaHQgOiAtMTAwJSB9XG5cbi50bnMtbm8tY2FsYyB7IHBvc2l0aW9uIDogcmVsYXRpdmU7IGxlZnQgOiAwIH1cblxuLnRucy1nYWxsZXJ5IHsgcG9zaXRpb24gOiByZWxhdGl2ZTsgbGVmdCA6IDA7IG1pbi1oZWlnaHQgOiAxcHggfVxuXG4udG5zLWdhbGxlcnkgPiAudG5zLWl0ZW0geyBwb3NpdGlvbiA6IGFic29sdXRlOyBsZWZ0IDogLTEwMCU7IC13ZWJraXQtdHJhbnNpdGlvbiA6IHRyYW5zZm9ybSAwcywgb3BhY2l0eSAwczsgLW1vei10cmFuc2l0aW9uIDogdHJhbnNmb3JtIDBzLCBvcGFjaXR5IDBzOyB0cmFuc2l0aW9uIDogdHJhbnNmb3JtIDBzLCBvcGFjaXR5IDBzIH1cblxuLnRucy1nYWxsZXJ5ID4gLnRucy1tb3ZpbmcgeyAtd2Via2l0LXRyYW5zaXRpb24gOiBhbGwgMC4yNXM7IC1tb3otdHJhbnNpdGlvbiA6IGFsbCAwLjI1czsgdHJhbnNpdGlvbiA6IGFsbCAwLjI1cyB9XG5cbi50bnMtbGF6eS1pbWcgeyAtd2Via2l0LXRyYW5zaXRpb24gOiBvcGFjaXR5IDAuNnM7IC1tb3otdHJhbnNpdGlvbiA6IG9wYWNpdHkgMC42czsgdHJhbnNpdGlvbiA6IG9wYWNpdHkgMC42czsgb3BhY2l0eSA6IDAuNiB9XG5cbi50bnMtbGF6eS1pbWcubG9hZGVkIHsgb3BhY2l0eSA6IDEgfVxuXG4udG5zLWFoIHsgLXdlYmtpdC10cmFuc2l0aW9uIDogaGVpZ2h0IDBzOyAtbW96LXRyYW5zaXRpb24gOiBoZWlnaHQgMHM7IHRyYW5zaXRpb24gOiBoZWlnaHQgMHMgfVxuXG4udG5zLW92aCB7IG92ZXJmbG93IDogaGlkZGVuIH1cblxuLnRucy1oZHggeyBvdmVyZmxvdy14IDogaGlkZGVuIH1cblxuLnRucy1oZHkgeyBvdmVyZmxvdy15IDogaGlkZGVuIH1cblxuLnRucy12aXN1YWxseS1oaWRkZW4geyBwb3NpdGlvbiA6IGFic29sdXRlOyBsZWZ0IDogLTEwMDAwZW0gfVxuXG4udG5zLXRyYW5zcGFyZW50IHsgb3BhY2l0eSA6IDA7IHZpc2liaWxpdHkgOiBoaWRkZW4gfVxuXG4udG5zLWZhZGVJbiB7IG9wYWNpdHkgOiAxOyBmaWx0ZXIgOiBhbHBoYShvcGFjaXR5PTEwMCk7IHotaW5kZXggOiAwIH1cblxuLnRucy1ub3JtYWwsIC50bnMtZmFkZU91dCB7IG9wYWNpdHkgOiAwOyBmaWx0ZXIgOiBhbHBoYShvcGFjaXR5PTApOyB6LWluZGV4IDogLTEgfVxuIiwiLyogQUxMICovXHJcblxyXG4uYnRuIHtcclxuXHRAaW5jbHVkZSB0cmFuc2l0aW9uKC4ycywgYmFja2dyb3VuZC1jb2xvcik7XHJcblx0QGluY2x1ZGUgaW5saW5lLWJsb2NrO1xyXG5cdGJvcmRlcjoxcHggc29saWQgJGN0YS1ibHVlO1xyXG5cdGZvbnQtc2l6ZToxLjJlbTtcclxuXHRwYWRkaW5nOi40ZW0gMS4yZW07XHJcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG5cclxuXHQmOmhvdmVyLCAmOmZvY3VzLCAmOmFjdGl2ZSB7XHJcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoJHdoaXRlLCAwLjUpO1xyXG5cdH1cclxuXHJcblx0Ji1ibHVlIHtcclxuXHRcdGJhY2tncm91bmQtY29sb3I6JGN0YS1ibHVlO1xyXG5cdFx0Zm9udC1zaXplOiRmb250U2l6ZS0tZGVmYXVsdDtcclxuXHRcdGNvbG9yOiR3aGl0ZTtcclxuXHRcdGZvbnQtd2VpZ2h0OiRmb250LS1yZWc7XHJcblx0XHRwYWRkaW5nOjFlbSAyLjJlbTtcclxuXHRcdGxldHRlci1zcGFjaW5nOiAxcHg7XHJcblxyXG5cdFx0Jjpob3ZlciwgJjpmb2N1cywgJjphY3RpdmUge1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0ZW4oJGN0YS1ibHVlLCA1JSk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcblxyXG4ubW9iaWxlSGlkZSB7XHJcblx0QGluY2x1ZGUgYnAoJHNjci0tdGFibGV0LCBtYXgtd2lkdGgpIHtcclxuXHRcdGRpc3BsYXk6bm9uZTtcclxuXHR9XHJcbn1cclxuLyogSEVBREVSICovXHJcblxyXG5odG1sIHtcclxufVxyXG5cclxuYm9keSB7XHJcblx0Y29sb3I6JGRhcms7XHJcblx0Zm9udC13ZWlnaHQ6JGZvbnQtLXNlbWlib2xkO1xyXG5cclxuXHRAaW5jbHVkZSBicCgkc2NyLS10YWJsZXQsIG1heC13aWR0aCkge1xyXG5cdFx0Ji5uYXYtb3BlbiB7XHJcblx0XHRcdG92ZXJmbG93IDogaGlkZGVuO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLmFsbENvbnRlbnQge1xyXG5cdHBvc2l0aW9uOnJlbGF0aXZlO1xyXG5cclxuXHRAaW5jbHVkZSBicCgkc2NyLS10YWJsZXQsIG1heC13aWR0aCkge1xyXG5cdFx0QGluY2x1ZGUgdHJhbnNpdGlvbiguM3MsIGxlZnQpO1xyXG5cdFx0bGVmdDowO1xyXG5cclxuXHRcdC5uYXYtb3BlbiAmIHtcclxuXHRcdFx0bGVmdCA6IDgwJTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi5oZWFkZXIge1xyXG5cdG92ZXJmbG93OmhpZGRlbjtcclxuXHRwb3NpdGlvbjpyZWxhdGl2ZTtcclxufVxyXG5cclxuLnRvcEJhciB7XHJcblx0cG9zaXRpb24gOiByZWxhdGl2ZTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiRoZWFkZXItYmx1ZTtcclxuXHRkaXNwbGF5OmZsZXg7XHJcblx0ZmxleC13cmFwOndyYXA7XHJcblx0anVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG5cdGFsaWduLWl0ZW1zOmNlbnRlcjtcclxuXHJcblx0QGluY2x1ZGUgYnAoJHNjci0tdGFibGV0KSB7XHJcblx0XHRwYWRkaW5nOiAuNWVtIDBlbTtcclxuXHR9XHJcblxyXG5cdEBpbmNsdWRlIGJwKCRzY3ItLXdyYXApIHtcclxuXHRcdHBhZGRpbmc6LjVlbSA2ZW07XHJcblx0fVxyXG59XHJcblxyXG4uY3VycmVuY3lTZWxlY3RvciB7XHJcblx0ZGlzcGxheTpmbGV4O1xyXG5cdHBhZGRpbmc6LjhlbSAyZW07XHJcblxyXG5cdCZfX2l0ZW0ge1xyXG5cdFx0QGluY2x1ZGUgbGlzdC1tYXJnaW4oMS41ZW0sIGgpO1xyXG5cdH1cclxufVxyXG5cclxuLmxhbmd1YWdlU2VsZWN0b3Ige1xyXG5cdEBpbmNsdWRlIGljb21vb24oaWNvbi1kb3duLWFycm93KSB7XHJcblx0XHRtYXJnaW4tbGVmdDogMWVtO1xyXG5cdFx0Zm9udC1zaXplOiAxLjFlbTtcclxuXHR9XHJcblx0ZGlzcGxheTpmbGV4O1xyXG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblx0Zm9udC1zaXplOjEuMmVtO1xyXG5cdGZvbnQtd2VpZ2h0OiRmb250LS1ib2xkO1xyXG5cdHBhZGRpbmc6MCAycmVtO1xyXG59XHJcblxyXG4uaGVhZGVyX19hbm5vdW5jZW1lbnQge1xyXG5cdHRleHQtYWxpZ246Y2VudGVyO1xyXG5cdGZvbnQtc2l6ZToxLjJlbTtcclxuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdGZvbnQtd2VpZ2h0OiRmb250LS1ib2xkO1xyXG5cdGxldHRlci1zcGFjaW5nOjFweDtcclxuXHRwYWRkaW5nOjFlbSAyZW07XHJcblxyXG5cdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCwgbWF4LXdpZHRoKSB7XHJcblx0XHR3aWR0aDoxMDAlO1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjokaGVhZGVyLWJsdWUtbGlnaHQ7XHJcblx0fVxyXG5cclxuXHRAaW5jbHVkZSBicCgkc2NyLS10YWJsZXQpIHtcclxuXHRcdEBpbmNsdWRlIGNlbnRlci1pdGVtO1xyXG5cdFx0Zm9udC1zaXplOjEuNGVtO1xyXG5cdH1cclxufVxyXG5cclxuLm5hdmlnYXRpb25Db250YWluZXIge1xyXG5cdHBvc2l0aW9uOnJlbGF0aXZlO1xyXG5cdGRpc3BsYXk6ZmxleDtcclxuXHRqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcblx0YWxpZ24taXRlbXM6Y2VudGVyO1xyXG5cdHBhZGRpbmc6MWVtIDJlbTtcclxuXHJcblx0QGluY2x1ZGUgYnAoJHNjci0tdGFibGV0KSB7XHJcblx0XHRwYWRkaW5nOjJlbSAyZW07XHJcblx0fVxyXG5cclxuXHRAaW5jbHVkZSBicCgkc2NyLS13cmFwKSB7XHJcblx0XHRwYWRkaW5nOjJlbSA4ZW07XHJcblx0fVxyXG59XHJcblxyXG4ubW9iaWxlQnVyZ2VyIHtcclxuXHRAaW5jbHVkZSBpY29tb29uKGljb24tYnVyZ2VyLCAkcmVwbGFjZTp0cnVlKSB7XHJcblx0XHRmb250LXNpemU6MnJlbTtcclxuXHR9XHJcblxyXG5cdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCkge1xyXG5cdFx0ZGlzcGxheTpub25lO1xyXG5cdH1cclxufVxyXG5cclxuLmxvZ29NYWluIHtcclxuXHJcbn1cclxuXHJcbi5tYWluTmF2IHtcclxuXHRAaW5jbHVkZSBicCgkc2NyLS10YWJsZXQsIG1heC13aWR0aCkge1xyXG5cdFx0QGluY2x1ZGUgdHJhbnNpdGlvbiguM3MsIHRyYW5zZm9ybSk7XHJcblx0XHRwb3NpdGlvbjpmaXhlZDtcclxuXHRcdHRvcDowO1xyXG5cdFx0bGVmdDowO1xyXG5cdFx0dHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTEwMCUpO1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjpkYXJrZW4oJHdoaXRlLCAzJSk7XHJcblx0XHRoZWlnaHQ6MTAwdmg7XHJcblx0XHR3aWR0aDo4MCU7XHJcblxyXG5cdFx0JjphZnRlciB7XHJcblx0XHRcdGNvbnRlbnQ6Jyc7XHJcblx0XHRcdHBvc2l0aW9uOmFic29sdXRlO1xyXG5cdFx0XHR0b3A6MDtcclxuXHRcdFx0Ym90dG9tOjA7XHJcblx0XHRcdHJpZ2h0OjA7XHJcblx0XHRcdHdpZHRoOjFlbTtcclxuXHRcdFx0YmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDAsMCwwLDApIDAlLHJnYmEoMCwwLDAsMSkgMTAwJSk7XHJcblx0XHRcdG9wYWNpdHk6MC4wNTtcclxuXHRcdH1cclxuXHJcblx0XHQubmF2LW9wZW4gJiB7XHJcblx0XHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCkge1xyXG5cdFx0QGluY2x1ZGUgY2VudGVyLWl0ZW07XHJcblx0fVxyXG5cclxuXHJcblx0Jl9fbGlzdCB7XHJcblx0XHRwYWRkaW5nOjFlbTtcclxuXHRcdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCkge1xyXG5cdFx0XHRkaXNwbGF5OmZsZXg7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmX19pdGVtIHtcclxuXHRcdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCwgbWF4LXdpZHRoKSB7XHJcblx0XHRcdEBpbmNsdWRlIGxpc3QtbWFyZ2luKDFlbSwgdik7XHJcblx0XHR9XHJcblxyXG5cdFx0QGluY2x1ZGUgYnAoJHNjci0tdGFibGV0KSB7XHJcblx0XHRcdEBpbmNsdWRlIGxpc3QtbWFyZ2luKDJlbSwgaCk7XHJcblx0XHR9XHJcblxyXG5cdFx0QGluY2x1ZGUgYnAoJHNjci0tc3RkKSB7XHJcblx0XHRcdEBpbmNsdWRlIGxpc3QtbWFyZ2luKDRlbSwgaCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmX19saW5rIHtcclxuXHRcdGZvbnQtc2l6ZTokZm9udFNpemUtLWxhcmdlO1xyXG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHRcdGxldHRlci1zcGFjaW5nOiAycHg7XHJcblx0XHRwYWRkaW5nOjFyZW07XHJcblx0XHRkaXNwbGF5OmJsb2NrO1xyXG5cclxuXHRcdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCwgJHVudGlsOiAkc2NyLS1zdGQpIHtcclxuXHRcdFx0Zm9udC1zaXplOiRmb250U2l6ZS0tZGVmYXVsdDtcclxuXHRcdFx0bGV0dGVyLXNwYWNpbmc6IDFweDtcclxuXHRcdFx0cGFkZGluZzouNXJlbTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi5oZWFkZXJJY29ucyB7XHJcblx0Jl9fbGlzdCB7XHJcblx0XHRkaXNwbGF5OmZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczpjZW50ZXI7XHJcblx0fVxyXG5cclxuXHQmX19pdGVtIHtcclxuXHRcdEBpbmNsdWRlIGxpc3QtbWFyZ2luKDEuNWVtLCBoKTtcclxuXHR9XHJcblxyXG5cdCZfX2J0biB7XHJcblx0XHRAaW5jbHVkZSBpY29tb29uKCRyZXBsYWNlOnRydWUpIHtcclxuXHRcdFx0Zm9udC1zaXplOjJyZW07XHJcblx0XHR9XHJcblxyXG5cdFx0Ji5pY29uLXNlYXJjaCB7XHJcblx0XHRcdEBpbmNsdWRlIGljb21vb25pY29uKGljb24tc2VhcmNoKTtcclxuXHRcdH1cclxuXHJcblx0XHQmLmljb24tcHJvZmlsZSB7XHJcblx0XHRcdEBpbmNsdWRlIGljb21vb25pY29uKGljb24tcHJvZmlsZSk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ji5pY29uLWhlYXJ0IHtcclxuXHRcdFx0QGluY2x1ZGUgaWNvbW9vbmljb24oaWNvbi1oZWFydCk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ji5pY29uLWJhZyB7XHJcblx0XHRcdEBpbmNsdWRlIGljb21vb25pY29uKGljb24tYmFnKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi8qIENPTlRFTlQgKi9cclxuXHJcbi8qIFNMSURFUiAqL1xyXG5cclxuLnRucyB7XHJcblxyXG5cdCYtb3V0ZXIge1xyXG5cdFx0d2lkdGggICAgOiAxMDAlO1xyXG5cdFx0cG9zaXRpb24gOiByZWxhdGl2ZTtcclxuXHR9XHJcblxyXG5cdCYtY29udHJvbHMge1xyXG5cdFx0QGluY2x1ZGUgYnAoJHNjci0tdGFibGV0LCBtYXgtd2lkdGgpIHtcclxuXHRcdFx0ZGlzcGxheTpub25lO1xyXG5cdFx0fVxyXG5cclxuXHRcdFtkYXRhLWNvbnRyb2xzXSB7XHJcblx0XHRcdEBpbmNsdWRlIGNlbnRlci1pdGVtKCRoOmZhbHNlKTtcclxuXHRcdFx0QGluY2x1ZGUgaWNvbW9vbigkcmVwbGFjZTp0cnVlKSB7XHJcblx0XHRcdFx0Zm9udC1zaXplOjJyZW07XHJcblx0XHRcdFx0Y29sb3I6JHdoaXRlO1xyXG5cdFx0XHRcdHBhZGRpbmc6MWVtO1xyXG5cdFx0XHR9XHJcblx0XHRcdHotaW5kZXg6MjA7XHJcblx0XHRcdG1hcmdpbjowIDJyZW07XHJcblxyXG5cdFx0XHRAaW5jbHVkZSBicCgkc2NyLS13cmFwKSB7XHJcblx0XHRcdFx0bWFyZ2luOiAwIDRyZW07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRbZGF0YS1jb250cm9scz1cInByZXZcIl0ge1xyXG5cdFx0XHRAaW5jbHVkZSBpY29tb29uaWNvbihpY29uLWFycm93LWxlZnQpO1xyXG5cdFx0XHRsZWZ0OjA7XHJcblx0XHR9XHJcblxyXG5cdFx0W2RhdGEtY29udHJvbHM9XCJuZXh0XCJdIHtcclxuXHRcdFx0QGluY2x1ZGUgaWNvbW9vbmljb24oaWNvbi1hcnJvdy1yaWdodCk7XHJcblx0XHRcdHJpZ2h0OjA7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmLW5hdiB7XHJcblx0XHRAaW5jbHVkZSBjZW50ZXItaXRlbSgkdjpmYWxzZSk7XHJcblx0XHRib3R0b206MDtcclxuXHRcdHotaW5kZXg6MjA7XHJcblx0XHRwYWRkaW5nLWJvdHRvbToyZW07XHJcblx0XHRkaXNwbGF5OmZsZXg7XHJcblx0XHRhbGlnbi1pdGVtczpjZW50ZXI7XHJcblxyXG5cclxuXHRcdFtkYXRhLW5hdl0ge1xyXG5cdFx0XHRAaW5jbHVkZSBsaXN0LW1hcmdpbigxZW0sIGgpO1xyXG5cdFx0XHR0cmFuc2l0aW9uOm5vbmUgIWltcG9ydGFudDtcclxuXHRcdFx0d2lkdGg6MS4yZW07XHJcblx0XHRcdGhlaWdodDoxLjJlbTtcclxuXHRcdFx0Ym9yZGVyLXJhZGl1czoxMGVtO1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoJHdoaXRlLCAwLjcpO1xyXG5cclxuXHRcdFx0Ji50bnMtbmF2LWFjdGl2ZSB7XHJcblx0XHRcdFx0YmFja2dyb3VuZC1jb2xvcjokd2hpdGU7XHJcblx0XHRcdFx0d2lkdGg6MS43ZW07XHJcblx0XHRcdFx0aGVpZ2h0OjEuN2VtO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQmLWl0ZW0ge1xyXG5cdFx0d2lkdGg6MTAwJTtcclxuXHR9XHJcblxyXG5cdCYtc2xpZGUge1xyXG5cdFx0YmFja2dyb3VuZC1pbWFnZTogdXJsKCRpbWdhc3NldHMgKyAnc2xpZGUxLmpwZycpO1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG5cdFx0YmFja2dyb3VuZC1zaXplOmNvdmVyO1xyXG5cdFx0YmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuXHRcdGNvbG9yOiR3aGl0ZTtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHRcdGxldHRlci1zcGFjaW5nOjFweDtcclxuXHRcdHBhZGRpbmc6IDEwZW0gMmVtO1xyXG5cclxuXHRcdEBpbmNsdWRlIGJwKCRzY3ItLXRhYmxldCkge1xyXG5cdFx0XHRwYWRkaW5nOjE1ZW0gMmVtO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ji1zbGlkZS10aXRsZSB7XHJcblx0XHRmb250LWZhbWlseTogJGZvbnQtLXRpdGxlO1xyXG5cdFx0Zm9udC13ZWlnaHQ6JGZvbnQtLXJlZztcclxuXHR9XHJcblxyXG5cdCYtc2xpZGUtY29weSB7XHJcblx0fVxyXG5cclxuXHQmLXNsaWRlLWN0YSB7XHJcblx0XHRtYXJnaW4tdG9wOiAyZW07XHJcblxyXG5cdH1cclxuXHJcblx0Ji1pbWcge1xyXG5cdFx0d2lkdGg6MTAwJTtcclxuXHR9XHJcblxyXG5cclxufSJdfQ== */
