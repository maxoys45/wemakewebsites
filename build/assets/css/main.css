@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,600,700");
@import url("https://fonts.googleapis.com/css?family=Abril+Fatface");
@font-face {
  font-family: 'icomoon';
  src: url("../fonts/icomoon/icomoon.eot?hctuk2");
  src: url("../fonts/icomoon/icomoon.eot?hctuk2#iefix") format("embedded-opentype"), url("../fonts/icomoon/icomoon.ttf?hctuk2") format("truetype"), url("../fonts/icomoon/icomoon.woff?hctuk2") format("woff"), url("../fonts/icomoon/icomoon.svg?hctuk2#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon-minus, .cart__quantity__btn.icon-minus:after {
  content: "\e90b"; }

.icon-plus, .cart__quantity__btn.icon-plus:after {
  content: "\e90a"; }

.icon-down-arrow, .languageSelector:after {
  content: "\e900"; }

.icon-arrow-left, .tns-controls [data-controls="prev"]:after {
  content: "\e901"; }

.icon-arrow-right, .tns-controls [data-controls="next"]:after {
  content: "\e902"; }

.icon-bag, .headerIcons__btn.icon-bag:after {
  content: "\e903"; }

.icon-cancel, .cart__remove:after {
  content: "\e904"; }

.icon-heart, .headerIcons__btn.icon-heart:after {
  content: "\e905"; }

.icon-payment {
  content: "\e906"; }

.icon-profile, .headerIcons__btn.icon-profile:after {
  content: "\e907"; }

.icon-search, .headerIcons__btn.icon-search:after {
  content: "\e908"; }

.icon-burger, .mobileBurger:after {
  content: "\e909"; }

/* @keyframes duration | timing-function | delay |
   iteration-count | direction | fill-mode | play-state | name

EG: animation: 3s ease-in 1s 2 reverse both paused slidein; */
/* WRAP */
/* ELLIP */
/* TRANSITIONS */
/* BREAK POINTS */
/* -- min-width by default
   -- if 2nd parameter is 'max-width', max-width used instead
   -- if $until is added, $point becomes min-width and $until is max-width */
/* LIST MARGINS */
/* CALC */
/* FLEXBOX */
/* ------------------------------------------------------
 * FLEXBOX MIXIN
 * ------------------------------------------------------
 * @desc  Let's you create flexbox container and item css with 2 mixins

 * @usage
 *
 *    @include flexbox-container(
 *
 *        $display : flex,        [flex / inline]
 *        $direction : row,       [row / row-reverse / column / column-reverse]
 *        $wrap : nowrap,         [nowrap / wrap / wrap-reverse]
 *        $justify : start,       [start / end / center / between / around]
 *        $alignContent : start,  [start / end / center / between / around / stretch]
 *        $alignItems : center     [start / end / center / baseline / stretch]
 *
 *    );
 *
 *
 *    @include flexbox-item(
 *
 *        $order : null,          [integer] -- custom order of items
 *        $grow : 0,              [0 / 1]
 *        $shrink : 1,            [0 / 1]
 *        $basis : auto,          [auto / <length>]
 *        $alignSelf : auto       [auto / start / end / center / baseline / stretch]
 *
 *    );
 *
 * @author maxoys45
 * @version 0.1
 * ------------------------------------------------------ */
/* ASPECT RATIO */
/* HARDWARE ACCEL */
/* CENTRED CONTENT */
/* TARGET IE10+ */
/* BG IMAGE SVG WITH PNG FALLBACK */
/* ANIMATED PNG */
/* Mixin to replicate an animated GIF using Keyframes and a PNG Sprite image.

	$numberOfSteps 	= the number of frames to step between (no limit to number of steps)
	$animName 		= purely used as the animation name to avoid duplicate animations
	$imageSize 		= the width or height of the PNG image which needs to be shown in each frame
	$duration 		= the total time for the animation in seconds
	$playCount		= the way the animation is played (linear, infinite, inout)

	** requires auto-prefixer to support all modern browsers
	** Requires 'compass/css3' */
/* example use */
.animatedImage {
  animation: YES_WE_CAN 1s 2 forwards;
  /* places the keyframes animation outside of the selector */
  background-image: url("http://www.maxhenchman.co.uk/random/123test.png");
  background-repeat: no-repeat;
  background-color: #FF0000;
  display: block;
  width: 100px;
  height: 100px;
  overflow: hidden;
  margin: 20px auto; }

@keyframes YES_WE_CAN {
  0% {
    background-position: 0 0; }
  20% {
    background-position: -0px 0; }
  20.0001% {
    background-position: -100px 0; }
  40% {
    background-position: -100px 0; }
  40.0001% {
    background-position: -200px 0; }
  60% {
    background-position: -200px 0; }
  60.0001% {
    background-position: -300px 0; }
  80% {
    background-position: -300px 0; }
  80.0001% {
    background-position: -400px 0; }
  100% {
    background-position: -400px 0; } }

/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

*, *:before, *:after {
  box-sizing: border-box; }

html {
  line-height: 1;
  font-size: 10px; }

body {
  font-family: "Open Sans", sans-serif; }

input, button, select, textarea, optgroup, option {
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  color: inherit; }

h1, h2, h3, h4 {
  line-height: 1.3; }

h1 {
  font-size: 4.8em;
  margin-bottom: .8em; }

h2 {
  font-size: 4.2em;
  margin-bottom: .4em; }
  @media screen and (min-width: 480px) {
    h2 {
      font-size: 5em; } }

h3 {
  font-size: 2.1em;
  margin-bottom: .5em; }

h4 {
  font-size: 1.6em;
  margin-bottom: .3em;
  letter-spacing: 1px; }

h5 {
  font-size: 1.2em;
  letter-spacing: .5px;
  color: #9e9e9e; }

a, button, input, textarea {
  outline: none; }

p {
  line-height: 1.3;
  font-size: 1.4rem;
  margin-bottom: 1em; }
  p:last-of-type {
    margin-bottom: 0; }
  p a {
    font-weight: 400; }
  @media screen and (min-width: 480px) {
    p {
      font-size: 1.6rem; } }

.anchor, p a {
  font-size: 1.6rem;
  line-height: 1.3;
  outline: none;
  text-decoration: underline; }

a {
  text-decoration: none;
  color: inherit; }

img {
  display: block;
  max-width: 100%; }

strong {
  font-weight: 700; }

.hidden {
  display: none; }

.input--default {
  display: inline-block;
  vertical-align: middle;
  cursor: default;
  border-radius: 0.2rem;
  background: #FFFFFF;
  padding: 1.5rem 1rem;
  font-size: 1.6rem;
  outline: none;
  text-align: left;
  position: relative;
  min-width: 150px;
  line-height: 1.3;
  text-decoration: none; }
  .input--default:hover {
    color: inherit; }

.stripInput, button {
  border: none;
  background: none;
  padding: 0;
  cursor: pointer; }

.hiddenInputs {
  width: 0.1px;
  height: 0.1px;
  opacity: 0;
  overflow: hidden;
  position: absolute;
  z-index: -1; }

.justify {
  text-align: justify; }

.wrapped {
  max-width: 1224px;
  margin-left: auto;
  margin-right: auto; }

iframe {
  width: 100%; }

.tns-outer {
  padding: 0 !important; }

.tns-outer [hidden] {
  display: none !important; }

.tns-outer [aria-controls], .tns-outer [data-action] {
  cursor: pointer; }

.tns-outer.ms-touch {
  overflow-x: scroll;
  overflow-y: hidden;
  -ms-overflow-style: none;
  -ms-scroll-chaining: none;
  -ms-scroll-snap-type: mandatory;
  -ms-scroll-snap-points-x: snapInterval(0%, 100%); }

.tns-slider {
  transition: all 0s; }

.tns-slider > .tns-item {
  box-sizing: border-box; }

.tns-horizontal.tns-subpixel {
  white-space: nowrap; }

.tns-horizontal.tns-subpixel > .tns-item {
  display: inline-block;
  vertical-align: top;
  white-space: normal; }

.tns-horizontal.tns-no-subpixel:after {
  content: '';
  display: table;
  clear: both; }

.tns-horizontal.tns-no-subpixel > .tns-item {
  float: left;
  margin-right: -100%; }

.tns-no-calc {
  position: relative;
  left: 0; }

.tns-gallery {
  position: relative;
  left: 0;
  min-height: 1px; }

.tns-gallery > .tns-item {
  position: absolute;
  left: -100%;
  transition: transform 0s, opacity 0s; }

.tns-gallery > .tns-moving {
  transition: all 0.25s; }

.tns-lazy-img {
  transition: opacity 0.6s;
  opacity: 0.6; }

.tns-lazy-img.loaded {
  opacity: 1; }

.tns-ah {
  transition: height 0s; }

.tns-ovh {
  overflow: hidden; }

.tns-hdx {
  overflow-x: hidden; }

.tns-hdy {
  overflow-y: hidden; }

.tns-visually-hidden {
  position: absolute;
  left: -10000em; }

.tns-transparent {
  opacity: 0;
  visibility: hidden; }

.tns-fadeIn {
  opacity: 1;
  filter: alpha(opacity=100);
  z-index: 0; }

.tns-normal, .tns-fadeOut {
  opacity: 0;
  filter: alpha(opacity=0);
  z-index: -1; }

/* ALL */
.btn {
  transition: 0.2s background-color ease-in-out;
  display: inline-block;
  vertical-align: middle;
  border: 1px solid #2d4966;
  font-size: 1.2em;
  padding: .4em 1.2em;
  text-transform: uppercase;
  background-color: transparent;
  text-align: center; }
  .btn:hover, .btn:focus, .btn:active {
    background-color: rgba(255, 255, 255, 0.5); }
  .btn-blue {
    background-color: #2d4966;
    font-size: 1.6rem;
    color: #FFFFFF;
    font-weight: 400;
    padding: 1em 2.2em;
    letter-spacing: 1px; }
    .btn-blue:hover, .btn-blue:focus, .btn-blue:active {
      background-color: #355678; }

@media screen and (max-width: 767px) {
  .mobileHide {
    display: none; } }

/* HEADER */
body {
  color: #191919;
  font-weight: 600; }
  @media screen and (max-width: 767px) {
    body.nav-open {
      overflow: hidden; } }

.allContent {
  position: relative; }
  @media screen and (max-width: 767px) {
    .allContent {
      transition: 0.3s left ease-in-out;
      left: 0; }
      .nav-open .allContent {
        left: 80%; } }

.header {
  position: relative; }

.topBar {
  position: relative;
  background-color: #ced9e4;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center; }
  @media screen and (min-width: 768px) {
    .topBar {
      padding: .5em 0em; } }
  @media screen and (min-width: 1024px) {
    .topBar {
      padding: .5em 6em; } }

.currencySelector {
  display: -ms-flexbox;
  display: flex;
  padding: .8em 2em; }
  .currencySelector__item {
    margin-right: 1.5em; }
    .currencySelector__item:last-of-type {
      margin-right: 0; }

.languageSelector {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  font-size: 1.2em;
  font-weight: 700;
  padding: 0 2rem; }
  .languageSelector:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    margin-left: 1em;
    font-size: 1.1em; }

.header__announcement {
  text-align: center;
  font-size: 1.2em;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 1px;
  padding: 1em 2em; }
  @media screen and (max-width: 767px) {
    .header__announcement {
      width: 100%;
      background-color: #e9f0f7; } }
  @media screen and (min-width: 768px) {
    .header__announcement {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      font-size: 1.4em; } }

.navigationContainer {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: center;
      align-items: center;
  padding: 3.5em 2em; }
  @media screen and (min-width: 768px) {
    .navigationContainer {
      padding: 2em 2em; } }
  @media screen and (min-width: 1024px) {
    .navigationContainer {
      padding: 2em 8em; } }

.mobileBurger {
  font-size: 0; }
  .mobileBurger:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1rem;
    font-size: 2rem; }
  @media screen and (min-width: 768px) {
    .mobileBurger {
      display: none; } }

@media screen and (max-width: 767px) {
  .logoMain {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%); } }

@media screen and (max-width: 767px) {
  .mainNav {
    transition: 0.3s transform ease-in-out;
    position: fixed;
    top: 0;
    left: 0;
    transform: translateX(-100%);
    background-color: #f7f7f7;
    height: 100vh;
    width: 80%; }
    .mainNav:after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      width: 1em;
      background: linear-gradient(to right, rgba(0, 0, 0, 0) 0%, black 100%);
      opacity: 0.05; }
    .nav-open .mainNav {
      transform: translateX(0); } }

@media screen and (min-width: 768px) {
  .mainNav {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%); } }

.mainNav__list {
  padding: 1em; }
  @media screen and (min-width: 768px) {
    .mainNav__list {
      display: -ms-flexbox;
      display: flex; } }

@media screen and (max-width: 767px) {
  .mainNav__item {
    margin-bottom: 1em; }
    .mainNav__item:last-of-type {
      margin-bottom: 0; } }

@media screen and (min-width: 768px) {
  .mainNav__item {
    margin-right: 2em; }
    .mainNav__item:last-of-type {
      margin-right: 0; } }

@media screen and (min-width: 960px) {
  .mainNav__item {
    margin-right: 4em; }
    .mainNav__item:last-of-type {
      margin-right: 0; } }

.mainNav__link {
  font-size: 1.8rem;
  text-transform: uppercase;
  letter-spacing: 2px;
  padding: 1rem;
  display: block; }
  @media screen and (min-width: 768px) and (max-width: 959px) {
    .mainNav__link {
      font-size: 1.6rem;
      letter-spacing: 1px;
      padding: .5rem; } }

.headerIcons__list {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  position: relative; }

.headerIcons__item {
  margin-right: 1.5em; }
  .headerIcons__item:last-of-type {
    margin-right: 0; }

.headerIcons__btn {
  font-size: 0; }
  .headerIcons__btn:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1rem;
    font-size: 2rem; }

.overlay {
  background-color: #FFFFFF;
  box-shadow: 0 0 0.3em rgba(0, 0, 0, 0.2);
  position: absolute;
  z-index: 50;
  top: 100%;
  margin-top: 1.5em;
  padding: 1.5em; }
  @media screen and (min-width: 480px) {
    .overlay {
      padding: 3em; } }
  .overlay__arrow {
    background: url("../img/overlay-arrow.png") center center no-repeat;
    width: 1.8em;
    height: .9em;
    position: absolute;
    bottom: 100%;
    right: 1.1em; }
    @media screen and (min-width: 1024px) {
      .overlay__arrow {
        right: 5.1em; } }

.cart__overlay {
  width: 30em;
  right: -1em;
  display: none; }
  @media screen and (min-width: 768px) {
    .cart__overlay {
      width: 36em; } }
  @media screen and (min-width: 1024px) {
    .cart__overlay {
      right: -5em; } }
  .bag-open .cart__overlay {
    display: block; }

.cart__title, .cart__cost {
  font-size: 2em;
  letter-spacing: 1px;
  font-weight: 700;
  margin-bottom: 1.3em; }

.cart__item {
  transition: 0.5s opacity ease-in-out;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
  padding: 1.5em 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: start;
      align-items: flex-start;
  position: relative; }
  .cart__item.remove {
    opacity: 0; }
  .cart__item__thumbnail {
    background-color: #eaeaea;
    padding: 3em;
    margin-right: 1.5em; }
  .cart__item__img {
    max-width: 4.5em;
    width: 100%; }
  .cart__item__details {
    -ms-flex: 1 1 auto;
        flex: 1 1 auto;
    padding-right: 2.1em; }

.cart__remove {
  position: absolute;
  top: 1.5em;
  right: 0;
  font-size: 1.1em; }
  .cart__remove:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale; }

.cart__quantity {
  margin: 1em 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  .cart__quantity__btn:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1em;
    padding: .5em;
    display: block; }
  .cart__quantity__value {
    margin: 0 .5em;
    font-size: 1.6rem; }

.cart__cost {
  margin-bottom: 0; }

.cart__checkout {
  width: 100%;
  margin-top: 1em; }

/* CONTENT */
/* SLIDER */
.tns-outer {
  width: 100%;
  position: relative; }

@media screen and (max-width: 767px) {
  .tns-controls {
    display: none; } }

.tns-controls [data-controls] {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  left: auto;
  transform: translateY(-50%);
  font-size: 0;
  z-index: 20;
  margin: 0 2rem; }
  .tns-controls [data-controls]:after {
    font-family: 'icomoon' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-size: 1rem;
    font-size: 2rem;
    color: #FFFFFF;
    padding: 1em; }
  @media screen and (min-width: 1024px) {
    .tns-controls [data-controls] {
      margin: 0 4rem; } }

.tns-controls [data-controls="prev"] {
  left: 0; }

.tns-controls [data-controls="next"] {
  right: 0; }

.tns-nav {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  top: auto;
  transform: translateX(-50%);
  bottom: 0;
  z-index: 20;
  padding-bottom: 2em;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  .tns-nav [data-nav] {
    margin-right: 1em;
    transition: none !important;
    width: 1.2em;
    height: 1.2em;
    border-radius: 10em;
    background-color: rgba(255, 255, 255, 0.7); }
    .tns-nav [data-nav]:last-of-type {
      margin-right: 0; }
    .tns-nav [data-nav].tns-nav-active {
      background-color: #FFFFFF;
      width: 1.7em;
      height: 1.7em; }

.tns-item {
  width: 100%; }

.tns-slide {
  background-image: url("../img/slide1.jpg");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  color: #FFFFFF;
  text-align: center;
  letter-spacing: 1px;
  padding: 10em 2em; }
  @media screen and (min-width: 768px) {
    .tns-slide {
      padding: 15em 2em; } }

.tns-slide-title {
  font-family: "Abril Fatface", serif;
  font-weight: 400; }

.tns-slide-cta {
  margin-top: 2em; }

.tns-img {
  width: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
